{"ast":null,"code":"import axios from'axios';export const api=axios.create({baseURL:'http://localhost:8000'});// Chat API functions\nexport const chatAPI={getChats:()=>api.get('/chats'),createChat:title=>api.post('/chats',{title}),getChatMessages:chatId=>api.get(`/chats/${chatId}/messages`),sendMessage:(chatId,content)=>api.post(`/chats/${chatId}/messages`,{content,role:'user'}),generateChatTitle:chatId=>api.post(`/chats/${chatId}/generate-title`),getChatContext:chatId=>api.get(`/chats/${chatId}/context`),healthCheck:()=>api.get('/health')};// Notion API functions\nexport const notionAPI={getSettings:()=>api.get('/notion/settings'),updateSettings:settings=>api.post('/notion/settings',settings),testConnection:settings=>api.post('/notion/test-connection',settings),uploadFile:(file,pageType,onUploadProgress)=>{const formData=new FormData();formData.append('file',file);formData.append('page_type',pageType);return api.post('/notion/upload-file',formData,{headers:{'Content-Type':'multipart/form-data'},onUploadProgress});},startImport:forceUpdate=>api.post(`/notion/import?force_update=${forceUpdate}`,{},{responseType:'stream'}),getImportStatus:()=>api.get('/notion/import-status'),getPages:function(pageType){let limit=arguments.length>1&&arguments[1]!==undefined?arguments[1]:100;let offset=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;return api.get('/notion/pages',{params:{page_type:pageType,limit,offset}});},getPageDetails:pageId=>api.get(`/notion/pages/${pageId}`),searchPages:function(searchTerm,pageType){let limit=arguments.length>2&&arguments[2]!==undefined?arguments[2]:50;return api.post('/notion/pages/search',{search_term:searchTerm,page_type:pageType,limit});},getStats:()=>api.get('/notion/stats'),deleteData:()=>api.delete('/notion/data')};","map":{"version":3,"names":["axios","api","create","baseURL","chatAPI","getChats","get","createChat","title","post","getChatMessages","chatId","sendMessage","content","role","generateChatTitle","getChatContext","healthCheck","notionAPI","getSettings","updateSettings","settings","testConnection","uploadFile","file","pageType","onUploadProgress","formData","FormData","append","headers","startImport","forceUpdate","responseType","getImportStatus","getPages","limit","arguments","length","undefined","offset","params","page_type","getPageDetails","pageId","searchPages","searchTerm","search_term","getStats","deleteData","delete"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { \n  Chat, \n  Message, \n  NotionSettings, \n  NotionSettingsUpdate, \n  NotionPage, \n  NotionPageWithDetails,\n  ImportStatusResponse,\n  KnowledgeBaseStats,\n  PageSearchResponse,\n  TestConnectionResponse,\n  PageType\n} from '../types';\n\nexport const api = axios.create({\n  baseURL: 'http://localhost:8000',\n});\n\n// Chat API functions\nexport const chatAPI = {\n  getChats: () => api.get<Chat[]>('/chats'),\n  \n  createChat: (title: string) => \n    api.post<Chat>('/chats', { title }),\n  \n  getChatMessages: (chatId: number) => \n    api.get<Message[]>(`/chats/${chatId}/messages`),\n  \n  sendMessage: (chatId: number, content: string) => \n    api.post<{ message: string }>(`/chats/${chatId}/messages`, {\n      content,\n      role: 'user'\n    }),\n  \n  generateChatTitle: (chatId: number) =>\n    api.post<{ title: string }>(`/chats/${chatId}/generate-title`),\n  \n  getChatContext: (chatId: number) =>\n    api.get<{ chat_id: number; title: string; context: any }>(`/chats/${chatId}/context`),\n  \n  healthCheck: () =>\n    api.get<{ status: string; services: any; version: string }>('/health'),\n};\n\n// Notion API functions\nexport const notionAPI = {\n  getSettings: () => \n    api.get<NotionSettings>('/notion/settings'),\n    \n  updateSettings: (settings: NotionSettingsUpdate) =>\n    api.post<NotionSettings>('/notion/settings', settings),\n\n  testConnection: (settings: NotionSettingsUpdate) =>\n    api.post<TestConnectionResponse>('/notion/test-connection', settings),\n    \n  uploadFile: (file: File, pageType: PageType, onUploadProgress: (progressEvent: any) => void) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('page_type', pageType);\n\n    return api.post('/notion/upload-file', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n      onUploadProgress,\n    });\n  },\n\n  startImport: (forceUpdate: boolean) =>\n    api.post(`/notion/import?force_update=${forceUpdate}`, {}, { \n      responseType: 'stream' \n    }),\n\n  getImportStatus: () =>\n    api.get<ImportStatusResponse>('/notion/import-status'),\n\n  getPages: (pageType?: PageType, limit: number = 100, offset: number = 0) =>\n    api.get<NotionPage[]>('/notion/pages', { \n      params: { page_type: pageType, limit, offset } \n    }),\n\n  getPageDetails: (pageId: number) =>\n    api.get<NotionPageWithDetails>(`/notion/pages/${pageId}`),\n    \n  searchPages: (searchTerm: string, pageType?: PageType, limit: number = 50) =>\n    api.post<PageSearchResponse>('/notion/pages/search', {\n      search_term: searchTerm,\n      page_type: pageType,\n      limit,\n    }),\n    \n  getStats: () =>\n    api.get<KnowledgeBaseStats>('/notion/stats'),\n    \n  deleteData: () =>\n    api.delete('/notion/data'),\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}