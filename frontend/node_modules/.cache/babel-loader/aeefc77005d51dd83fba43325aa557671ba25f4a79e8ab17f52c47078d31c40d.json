{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/context/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const fetchUser = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (email, password) => {\n    const response = await api.post('/auth/login', {\n      email,\n      password\n    });\n    const {\n      access_token,\n      refresh_token\n    } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    await fetchUser();\n  };\n  const register = async (email, password) => {\n    const response = await api.post('/auth/register', {\n      email,\n      password\n    });\n    const {\n      access_token,\n      refresh_token\n    } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    await fetchUser();\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","response","get","data","error","removeItem","login","email","password","post","access_token","refresh_token","setItem","register","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse } from '../types';\nimport { api } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    const response = await api.post<AuthResponse>('/auth/login', {\n      email,\n      password,\n    });\n\n    const { access_token, refresh_token } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n    await fetchUser();\n  };\n\n  const register = async (email: string, password: string) => {\n    const response = await api.post<AuthResponse>('/auth/register', {\n      email,\n      password,\n    });\n\n    const { access_token, refresh_token } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n    await fetchUser();\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}