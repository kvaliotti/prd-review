{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadComplete\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [pageTypes, setPageTypes] = useState({});\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n    // Set default page type for new files\n    const newPageTypes = {};\n    acceptedFiles.forEach(file => {\n      newPageTypes[file.name] = PageType.RESEARCH;\n    });\n    setPageTypes(prev => ({\n      ...prev,\n      ...newPageTypes\n    }));\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/markdown': ['.md'],\n      'text/plain': ['.txt']\n    },\n    multiple: true\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n    setUploading(true);\n    const newUploadProgress = {};\n    for (const file of files) {\n      newUploadProgress[file.name] = 0;\n    }\n    setUploadProgress(newUploadProgress);\n    for (const file of files) {\n      try {\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 50\n        }));\n        await notionAPI.uploadFile(file, pageTypes[file.name] || PageType.RESEARCH);\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 100\n        }));\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: -1\n        }));\n      }\n    }\n    setUploading(false);\n    setFiles([]);\n    setPageTypes({});\n    setUploadProgress({});\n    onUploadComplete();\n  };\n  const handleRemoveFile = fileName => {\n    setFiles(files.filter(file => file.name !== fileName));\n    const newPageTypes = {\n      ...pageTypes\n    };\n    delete newPageTypes[fileName];\n    setPageTypes(newPageTypes);\n  };\n  const handlePageTypeChange = (fileName, type) => {\n    setPageTypes(prev => ({\n      ...prev,\n      [fileName]: type\n    }));\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const getProgressColor = progress => {\n    if (progress === -1) return '#e74c3c';\n    if (progress === 100) return '#27ae60';\n    return '#667eea';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kb-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"card-icon\",\n        children: \"\\uD83D\\uDCC1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-title\",\n          children: \"File Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-description\",\n          children: \"Upload documents directly to your knowledge base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `file-dropzone ${isDragActive ? 'active' : ''} ${files.length > 0 ? 'has-files' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropzone-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"dropzone-icon\",\n          children: \"\\uD83D\\uDCE4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dropzone-text\",\n          children: isDragActive ? \"Drop the files here...\" : \"Drag & drop files here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"dropzone-hint\",\n          children: \"Supports PDF, Markdown (.md), and Text (.txt) files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"files-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Files Ready for Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-name\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"file-size\",\n            children: formatFileSize(file.size)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: pageTypes[file.name] || PageType.RESEARCH,\n            onChange: e => handlePageTypeChange(file.name, e.target.value),\n            className: \"file-type-select\",\n            disabled: uploading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: PageType.PRD,\n              children: \"PRD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: PageType.RESEARCH,\n              children: \"Research\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: PageType.ANALYTICS,\n              children: \"Analytics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFile(file.name),\n            className: \"btn-remove\",\n            disabled: uploading,\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upload-progress\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-fill\",\n              style: {\n                width: `${Math.max(0, uploadProgress[file.name] || 0)}%`,\n                backgroundColor: getProgressColor(uploadProgress[file.name] || 0)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"progress-text\",\n            children: uploadProgress[file.name] === -1 ? 'Error' : uploadProgress[file.name] === 100 ? 'Complete' : `${uploadProgress[file.name] || 0}%`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)]\n      }, file.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: files.length === 0 || uploading,\n        className: \"btn-primary\",\n        children: uploading ? 'Uploading...' : `Upload ${files.length} File${files.length !== 1 ? 's' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"6OpKBr4FmWAnHlwka6I8zRvX4WI=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","notionAPI","PageType","jsxDEV","_jsxDEV","FileUpload","onUploadComplete","_s","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","pageTypes","setPageTypes","onDrop","acceptedFiles","prevFiles","newPageTypes","forEach","file","name","RESEARCH","prev","getRootProps","getInputProps","isDragActive","accept","multiple","handleUpload","length","newUploadProgress","uploadFile","error","console","handleRemoveFile","fileName","filter","handlePageTypeChange","type","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","getProgressColor","progress","className","children","_jsxFileName","lineNumber","columnNumber","map","size","value","onChange","e","target","disabled","PRD","ANALYTICS","onClick","style","width","max","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/FileUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\n\ninterface FileUploadProps {\n  onUploadComplete: () => void;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUploadComplete }) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState<Record<string, number>>({});\n  const [pageTypes, setPageTypes] = useState<Record<string, PageType>>({});\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n    // Set default page type for new files\n    const newPageTypes: Record<string, PageType> = {};\n    acceptedFiles.forEach(file => {\n      newPageTypes[file.name] = PageType.RESEARCH;\n    });\n    setPageTypes(prev => ({ ...prev, ...newPageTypes }));\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/markdown': ['.md'],\n      'text/plain': ['.txt'],\n    },\n    multiple: true,\n  });\n\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n\n    setUploading(true);\n    const newUploadProgress: Record<string, number> = {};\n    \n    for (const file of files) {\n      newUploadProgress[file.name] = 0;\n    }\n    setUploadProgress(newUploadProgress);\n\n    for (const file of files) {\n      try {\n        setUploadProgress(prev => ({ ...prev, [file.name]: 50 }));\n        \n        await notionAPI.uploadFile(\n          file, \n          pageTypes[file.name] || PageType.RESEARCH\n        );\n        \n        setUploadProgress(prev => ({ ...prev, [file.name]: 100 }));\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setUploadProgress(prev => ({ ...prev, [file.name]: -1 }));\n      }\n    }\n\n    setUploading(false);\n    setFiles([]);\n    setPageTypes({});\n    setUploadProgress({});\n    onUploadComplete();\n  };\n  \n  const handleRemoveFile = (fileName: string) => {\n    setFiles(files.filter(file => file.name !== fileName));\n    const newPageTypes = { ...pageTypes };\n    delete newPageTypes[fileName];\n    setPageTypes(newPageTypes);\n  };\n  \n  const handlePageTypeChange = (fileName: string, type: PageType) => {\n    setPageTypes(prev => ({ ...prev, [fileName]: type }));\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getProgressColor = (progress: number): string => {\n    if (progress === -1) return '#e74c3c';\n    if (progress === 100) return '#27ae60';\n    return '#667eea';\n  };\n\n  return (\n    <div className=\"kb-card\">\n      <div className=\"card-header\">\n        <span className=\"card-icon\">📁</span>\n        <div>\n          <h2 className=\"card-title\">File Upload</h2>\n          <p className=\"card-description\">Upload documents directly to your knowledge base</p>\n        </div>\n      </div>\n\n      <div \n        {...getRootProps()} \n        className={`file-dropzone ${isDragActive ? 'active' : ''} ${files.length > 0 ? 'has-files' : ''}`}\n      >\n        <input {...getInputProps()} />\n        <div className=\"dropzone-content\">\n          <span className=\"dropzone-icon\">📤</span>\n          <p className=\"dropzone-text\">\n            {isDragActive \n              ? \"Drop the files here...\" \n              : \"Drag & drop files here, or click to select\"\n            }\n          </p>\n          <p className=\"dropzone-hint\">Supports PDF, Markdown (.md), and Text (.txt) files</p>\n        </div>\n      </div>\n\n      {files.length > 0 && (\n        <div className=\"files-list\">\n          <h3>Files Ready for Upload</h3>\n          {files.map(file => (\n            <div key={file.name} className=\"file-item\">\n              <div className=\"file-info\">\n                <div className=\"file-name\">{file.name}</div>\n                <div className=\"file-size\">{formatFileSize(file.size)}</div>\n              </div>\n              \n              <div className=\"file-controls\">\n                <select \n                  value={pageTypes[file.name] || PageType.RESEARCH} \n                  onChange={(e) => handlePageTypeChange(file.name, e.target.value as PageType)}\n                  className=\"file-type-select\"\n                  disabled={uploading}\n                >\n                  <option value={PageType.PRD}>PRD</option>\n                  <option value={PageType.RESEARCH}>Research</option>\n                  <option value={PageType.ANALYTICS}>Analytics</option>\n                </select>\n                \n                <button \n                  onClick={() => handleRemoveFile(file.name)}\n                  className=\"btn-remove\"\n                  disabled={uploading}\n                >\n                  ✕\n                </button>\n              </div>\n\n              {uploading && (\n                <div className=\"upload-progress\">\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\" \n                      style={{ \n                        width: `${Math.max(0, uploadProgress[file.name] || 0)}%`,\n                        backgroundColor: getProgressColor(uploadProgress[file.name] || 0)\n                      }}\n                    />\n                  </div>\n                  <span className=\"progress-text\">\n                    {uploadProgress[file.name] === -1 \n                      ? 'Error' \n                      : uploadProgress[file.name] === 100 \n                      ? 'Complete' \n                      : `${uploadProgress[file.name] || 0}%`\n                    }\n                  </span>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"upload-actions\">\n        <button \n          onClick={handleUpload} \n          disabled={files.length === 0 || uploading}\n          className=\"btn-primary\"\n        >\n          {uploading ? 'Uploading...' : `Upload ${files.length} File${files.length !== 1 ? 's' : ''}`}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}