{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/PRDReviewPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { notionAPI, prdAPI } from '../services/api';\nimport { PageType } from '../types';\nimport './PRDReviewPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PRDReviewPage = () => {\n  _s();\n  // State management\n  const [notionPRDs, setNotionPRDs] = useState([]);\n  const [userPRDs, setUserPRDs] = useState([]);\n  const [selectedPRD, setSelectedPRD] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [editorContent, setEditorContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [showNewPRDModal, setShowNewPRDModal] = useState(false);\n  const [newPRDTitle, setNewPRDTitle] = useState('');\n\n  // Load PRDs on component mount\n  useEffect(() => {\n    loadAllPRDs();\n  }, []);\n\n  // Load all PRDs (both Notion and user-created)\n  const loadAllPRDs = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([loadNotionPRDs(), loadUserPRDs()]);\n    } catch (error) {\n      console.error('Failed to load PRDs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load PRDs from Notion\n  const loadNotionPRDs = async () => {\n    try {\n      const response = await notionAPI.getPages(PageType.prd, 100, 0);\n      const prdDocs = response.data.map(page => ({\n        id: `notion-${page.id}`,\n        title: page.title,\n        content: page.content || '',\n        created_at: page.created_at,\n        updated_at: page.updated_at,\n        is_local: false,\n        notion_url: page.notion_url,\n        file_type: 'text'\n      }));\n      setNotionPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load Notion PRDs:', error);\n    }\n  };\n\n  // Load user-created PRDs from database\n  const loadUserPRDs = async () => {\n    try {\n      const response = await prdAPI.getPRDs();\n      const prdDocs = response.data.map(prd => ({\n        id: `user-${prd.id}`,\n        title: prd.title,\n        content: prd.content || '',\n        created_at: prd.created_at,\n        updated_at: prd.updated_at,\n        is_local: true,\n        file_type: 'markdown'\n      }));\n      setUserPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load user PRDs:', error);\n    }\n  };\n\n  // Create new PRD in database\n  const createNewPRD = async () => {\n    if (!newPRDTitle.trim()) return;\n    setSaving(true);\n    try {\n      const prdData = {\n        title: newPRDTitle.trim(),\n        content: `# ${newPRDTitle.trim()}\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n`\n      };\n      const response = await prdAPI.createPRD(prdData);\n\n      // Convert to PRDDocument format\n      const newPRD = {\n        id: `user-${response.data.id}`,\n        title: response.data.title,\n        content: response.data.content || '',\n        created_at: response.data.created_at,\n        updated_at: response.data.updated_at,\n        is_local: true,\n        file_type: 'markdown'\n      };\n\n      // Add to user PRDs and select it\n      setUserPRDs(prev => [newPRD, ...prev]);\n      setSelectedPRD(newPRD);\n      setEditorContent(newPRD.content);\n      setIsEditing(true);\n      setShowNewPRDModal(false);\n      setNewPRDTitle('');\n    } catch (error) {\n      console.error('Failed to create PRD:', error);\n      alert('Failed to create PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Select a PRD document\n  const selectPRD = async prd => {\n    setSelectedPRD(prd);\n    setIsEditing(prd.is_local);\n    if (prd.is_local) {\n      // For user-created PRDs, content is already available\n      setEditorContent(prd.content || '');\n    } else {\n      // Load detailed content for Notion PRDs\n      try {\n        const notionId = parseInt(prd.id.replace('notion-', ''));\n        const response = await notionAPI.getPageDetails(notionId);\n        setEditorContent(response.data.content || '');\n      } catch (error) {\n        console.error('Failed to load PRD details:', error);\n        setEditorContent(prd.content || '');\n      }\n    }\n  };\n\n  // Save PRD changes to database\n  const savePRDChanges = async () => {\n    if (!(selectedPRD !== null && selectedPRD !== void 0 && selectedPRD.is_local)) return;\n    setSaving(true);\n    try {\n      const prdId = parseInt(selectedPRD.id.replace('user-', ''));\n      const updateData = {\n        content: editorContent\n      };\n      const response = await prdAPI.updatePRD(prdId, updateData);\n\n      // Update the PRD in state\n      const updatedPRD = {\n        ...selectedPRD,\n        content: response.data.content || '',\n        updated_at: response.data.updated_at\n      };\n      setSelectedPRD(updatedPRD);\n      setUserPRDs(prev => prev.map(prd => prd.id === selectedPRD.id ? updatedPRD : prd));\n      alert('PRD saved successfully!');\n    } catch (error) {\n      console.error('Failed to save PRD:', error);\n      alert('Failed to save PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Delete a PRD\n  const deletePRD = async prd => {\n    if (!prd.is_local) return;\n    if (!confirm(`Are you sure you want to delete \"${prd.title}\"?`)) return;\n    try {\n      const prdId = parseInt(prd.id.replace('user-', ''));\n      await prdAPI.deletePRD(prdId);\n\n      // Remove from state\n      setUserPRDs(prev => prev.filter(p => p.id !== prd.id));\n\n      // Clear selection if this PRD was selected\n      if ((selectedPRD === null || selectedPRD === void 0 ? void 0 : selectedPRD.id) === prd.id) {\n        setSelectedPRD(null);\n        setEditorContent('');\n        setIsEditing(false);\n      }\n      alert('PRD deleted successfully!');\n    } catch (error) {\n      console.error('Failed to delete PRD:', error);\n      alert('Failed to delete PRD. Please try again.');\n    }\n  };\n\n  // Get all PRDs sorted by update time\n  const allPRDs = [...userPRDs, ...notionPRDs].sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prd-review-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PRD Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-prd-btn\",\n          onClick: () => setShowNewPRDModal(true),\n          disabled: saving,\n          children: \"+ New PRD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prd-list\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading PRDs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }, this), allPRDs.map(prd => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prd-item ${(selectedPRD === null || selectedPRD === void 0 ? void 0 : selectedPRD.id) === prd.id ? 'selected' : ''}`,\n          onClick: () => selectPRD(prd),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prd-item-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: prd.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prd-badges\",\n              children: [prd.is_local && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge local\",\n                children: \"Local\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 36\n              }, this), !prd.is_local && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge notion\",\n                children: \"Notion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prd-item-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: new Date(prd.updated_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), prd.is_local && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: e => {\n                e.stopPropagation();\n                deletePRD(prd);\n              },\n              title: \"Delete PRD\",\n              children: \"\\uD83D\\uDDD1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)]\n        }, prd.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this)), allPRDs.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No PRDs found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create a new PRD or import from Notion.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-editor\",\n      children: selectedPRD ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedPRD.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-actions\",\n            children: [selectedPRD.is_local && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-btn\",\n                onClick: savePRDChanges,\n                disabled: !isEditing || saving,\n                children: saving ? 'Saving...' : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                onClick: () => setIsEditing(!isEditing),\n                disabled: saving,\n                children: isEditing ? 'Preview' : 'Edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), selectedPRD.notion_url && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: selectedPRD.notion_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"notion-link\",\n              children: \"Open in Notion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-content\",\n          children: isEditing && selectedPRD.is_local ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"markdown-editor\",\n            value: editorContent,\n            onChange: e => setEditorContent(e.target.value),\n            placeholder: \"Write your PRD content in Markdown...\",\n            disabled: saving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"markdown-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: editorContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a PRD to view or edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a PRD from the sidebar or create a new one to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-analysis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PRD Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Quick Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI-powered analysis will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Key Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Feature analysis coming soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"User Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Persona analysis will be shown here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Success Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Metrics analysis coming soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI recommendations will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), showNewPRDModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New PRD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowNewPRDModal(false),\n            disabled: saving,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"prd-title-input\",\n            placeholder: \"Enter PRD title...\",\n            value: newPRDTitle,\n            onChange: e => setNewPRDTitle(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && !saving && createNewPRD(),\n            autoFocus: true,\n            disabled: saving\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowNewPRDModal(false),\n            disabled: saving,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-btn\",\n            onClick: createNewPRD,\n            disabled: !newPRDTitle.trim() || saving,\n            children: saving ? 'Creating...' : 'Create PRD'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(PRDReviewPage, \"FoWRQ251kc7Kj+zJWE1goqiC1f4=\");\n_c = PRDReviewPage;\nexport default PRDReviewPage;\nvar _c;\n$RefreshReg$(_c, \"PRDReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","notionAPI","prdAPI","PageType","jsxDEV","_jsxDEV","Fragment","_Fragment","PRDReviewPage","_s","notionPRDs","setNotionPRDs","userPRDs","setUserPRDs","selectedPRD","setSelectedPRD","loading","setLoading","saving","setSaving","editorContent","setEditorContent","isEditing","setIsEditing","showNewPRDModal","setShowNewPRDModal","newPRDTitle","setNewPRDTitle","loadAllPRDs","Promise","all","loadNotionPRDs","loadUserPRDs","error","console","response","getPages","prd","prdDocs","data","map","page","id","title","content","created_at","updated_at","is_local","notion_url","file_type","getPRDs","createNewPRD","trim","prdData","createPRD","newPRD","prev","alert","selectPRD","notionId","parseInt","replace","getPageDetails","savePRDChanges","prdId","updateData","updatePRD","updatedPRD","deletePRD","confirm","filter","p","allPRDs","sort","a","b","Date","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","toLocaleDateString","e","stopPropagation","length","href","target","rel","value","onChange","placeholder","type","onKeyPress","key","autoFocus","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/PRDReviewPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { notionAPI, prdAPI, PRDCreate, PRDUpdate, PRDResponse } from '../services/api';\nimport { NotionPage, PRDDocument, PageType } from '../types';\nimport './PRDReviewPage.css';\n\nconst PRDReviewPage: React.FC = () => {\n  // State management\n  const [notionPRDs, setNotionPRDs] = useState<PRDDocument[]>([]);\n  const [userPRDs, setUserPRDs] = useState<PRDDocument[]>([]);\n  const [selectedPRD, setSelectedPRD] = useState<PRDDocument | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [editorContent, setEditorContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [showNewPRDModal, setShowNewPRDModal] = useState(false);\n  const [newPRDTitle, setNewPRDTitle] = useState('');\n\n  // Load PRDs on component mount\n  useEffect(() => {\n    loadAllPRDs();\n  }, []);\n\n  // Load all PRDs (both Notion and user-created)\n  const loadAllPRDs = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([loadNotionPRDs(), loadUserPRDs()]);\n    } catch (error) {\n      console.error('Failed to load PRDs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load PRDs from Notion\n  const loadNotionPRDs = async () => {\n    try {\n      const response = await notionAPI.getPages(PageType.prd, 100, 0);\n      const prdDocs: PRDDocument[] = response.data.map((page: NotionPage) => ({\n        id: `notion-${page.id}`,\n        title: page.title,\n        content: page.content || '',\n        created_at: page.created_at,\n        updated_at: page.updated_at,\n        is_local: false,\n        notion_url: page.notion_url,\n        file_type: 'text' as const,\n      }));\n      setNotionPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load Notion PRDs:', error);\n    }\n  };\n\n  // Load user-created PRDs from database\n  const loadUserPRDs = async () => {\n    try {\n      const response = await prdAPI.getPRDs();\n      const prdDocs: PRDDocument[] = response.data.map((prd: PRDResponse) => ({\n        id: `user-${prd.id}`,\n        title: prd.title,\n        content: prd.content || '',\n        created_at: prd.created_at,\n        updated_at: prd.updated_at,\n        is_local: true,\n        file_type: 'markdown' as const,\n      }));\n      setUserPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load user PRDs:', error);\n    }\n  };\n\n  // Create new PRD in database\n  const createNewPRD = async () => {\n    if (!newPRDTitle.trim()) return;\n\n    setSaving(true);\n    try {\n      const prdData: PRDCreate = {\n        title: newPRDTitle.trim(),\n        content: `# ${newPRDTitle.trim()}\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n`,\n      };\n\n      const response = await prdAPI.createPRD(prdData);\n      \n      // Convert to PRDDocument format\n      const newPRD: PRDDocument = {\n        id: `user-${response.data.id}`,\n        title: response.data.title,\n        content: response.data.content || '',\n        created_at: response.data.created_at,\n        updated_at: response.data.updated_at,\n        is_local: true,\n        file_type: 'markdown',\n      };\n\n      // Add to user PRDs and select it\n      setUserPRDs(prev => [newPRD, ...prev]);\n      setSelectedPRD(newPRD);\n      setEditorContent(newPRD.content);\n      setIsEditing(true);\n      setShowNewPRDModal(false);\n      setNewPRDTitle('');\n    } catch (error) {\n      console.error('Failed to create PRD:', error);\n      alert('Failed to create PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Select a PRD document\n  const selectPRD = async (prd: PRDDocument) => {\n    setSelectedPRD(prd);\n    setIsEditing(prd.is_local);\n\n    if (prd.is_local) {\n      // For user-created PRDs, content is already available\n      setEditorContent(prd.content || '');\n    } else {\n      // Load detailed content for Notion PRDs\n      try {\n        const notionId = parseInt(prd.id.replace('notion-', ''));\n        const response = await notionAPI.getPageDetails(notionId);\n        setEditorContent(response.data.content || '');\n      } catch (error) {\n        console.error('Failed to load PRD details:', error);\n        setEditorContent(prd.content || '');\n      }\n    }\n  };\n\n  // Save PRD changes to database\n  const savePRDChanges = async () => {\n    if (!selectedPRD?.is_local) return;\n\n    setSaving(true);\n    try {\n      const prdId = parseInt(selectedPRD.id.replace('user-', ''));\n      const updateData: PRDUpdate = {\n        content: editorContent,\n      };\n\n      const response = await prdAPI.updatePRD(prdId, updateData);\n      \n      // Update the PRD in state\n      const updatedPRD: PRDDocument = {\n        ...selectedPRD,\n        content: response.data.content || '',\n        updated_at: response.data.updated_at,\n      };\n\n      setSelectedPRD(updatedPRD);\n      setUserPRDs(prev => \n        prev.map(prd => \n          prd.id === selectedPRD.id ? updatedPRD : prd\n        )\n      );\n\n      alert('PRD saved successfully!');\n    } catch (error) {\n      console.error('Failed to save PRD:', error);\n      alert('Failed to save PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Delete a PRD\n  const deletePRD = async (prd: PRDDocument) => {\n    if (!prd.is_local) return;\n    \n    if (!confirm(`Are you sure you want to delete \"${prd.title}\"?`)) return;\n\n    try {\n      const prdId = parseInt(prd.id.replace('user-', ''));\n      await prdAPI.deletePRD(prdId);\n      \n      // Remove from state\n      setUserPRDs(prev => prev.filter(p => p.id !== prd.id));\n      \n      // Clear selection if this PRD was selected\n      if (selectedPRD?.id === prd.id) {\n        setSelectedPRD(null);\n        setEditorContent('');\n        setIsEditing(false);\n      }\n      \n      alert('PRD deleted successfully!');\n    } catch (error) {\n      console.error('Failed to delete PRD:', error);\n      alert('Failed to delete PRD. Please try again.');\n    }\n  };\n\n  // Get all PRDs sorted by update time\n  const allPRDs = [...userPRDs, ...notionPRDs].sort(\n    (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\n  );\n\n  return (\n    <div className=\"prd-review-page\">\n      {/* Left Sidebar - PRD List */}\n      <div className=\"prd-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>PRD Documents</h3>\n          <button \n            className=\"new-prd-btn\"\n            onClick={() => setShowNewPRDModal(true)}\n            disabled={saving}\n          >\n            + New PRD\n          </button>\n        </div>\n\n        <div className=\"prd-list\">\n          {loading && <div className=\"loading\">Loading PRDs...</div>}\n          \n          {allPRDs.map((prd) => (\n            <div\n              key={prd.id}\n              className={`prd-item ${selectedPRD?.id === prd.id ? 'selected' : ''}`}\n              onClick={() => selectPRD(prd)}\n            >\n              <div className=\"prd-item-header\">\n                <h4>{prd.title}</h4>\n                <div className=\"prd-badges\">\n                  {prd.is_local && <span className=\"badge local\">Local</span>}\n                  {!prd.is_local && <span className=\"badge notion\">Notion</span>}\n                </div>\n              </div>\n              <div className=\"prd-item-meta\">\n                <span className=\"date\">\n                  {new Date(prd.updated_at).toLocaleDateString()}\n                </span>\n                {prd.is_local && (\n                  <button\n                    className=\"delete-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      deletePRD(prd);\n                    }}\n                    title=\"Delete PRD\"\n                  >\n                    🗑️\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {allPRDs.length === 0 && !loading && (\n            <div className=\"empty-state\">\n              <p>No PRDs found.</p>\n              <p>Create a new PRD or import from Notion.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Central Editor Area */}\n      <div className=\"prd-editor\">\n        {selectedPRD ? (\n          <>\n            <div className=\"editor-header\">\n              <h2>{selectedPRD.title}</h2>\n              <div className=\"editor-actions\">\n                {selectedPRD.is_local && (\n                  <>\n                    <button\n                      className=\"save-btn\"\n                      onClick={savePRDChanges}\n                      disabled={!isEditing || saving}\n                    >\n                      {saving ? 'Saving...' : 'Save'}\n                    </button>\n                    <button\n                      className=\"edit-btn\"\n                      onClick={() => setIsEditing(!isEditing)}\n                      disabled={saving}\n                    >\n                      {isEditing ? 'Preview' : 'Edit'}\n                    </button>\n                  </>\n                )}\n                {selectedPRD.notion_url && (\n                  <a\n                    href={selectedPRD.notion_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"notion-link\"\n                  >\n                    Open in Notion\n                  </a>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-content\">\n              {isEditing && selectedPRD.is_local ? (\n                <textarea\n                  className=\"markdown-editor\"\n                  value={editorContent}\n                  onChange={(e) => setEditorContent(e.target.value)}\n                  placeholder=\"Write your PRD content in Markdown...\"\n                  disabled={saving}\n                />\n              ) : (\n                <div className=\"markdown-preview\">\n                  <pre>{editorContent}</pre>\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <div className=\"no-selection\">\n            <h3>Select a PRD to view or edit</h3>\n            <p>Choose a PRD from the sidebar or create a new one to get started.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Right Sidebar - Analysis */}\n      <div className=\"prd-analysis\">\n        <div className=\"analysis-header\">\n          <h3>PRD Analysis</h3>\n        </div>\n        <div className=\"analysis-content\">\n          <div className=\"analysis-section\">\n            <h4>Quick Overview</h4>\n            <p>AI-powered analysis will appear here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Key Features</h4>\n            <ul>\n              <li>Feature analysis coming soon</li>\n            </ul>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>User Personas</h4>\n            <p>Persona analysis will be shown here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Success Metrics</h4>\n            <p>Metrics analysis coming soon</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Recommendations</h4>\n            <p>AI recommendations will appear here</p>\n          </div>\n        </div>\n      </div>\n\n      {/* New PRD Modal */}\n      {showNewPRDModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Create New PRD</h3>\n              <button\n                className=\"close-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n                disabled={saving}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-content\">\n              <input\n                type=\"text\"\n                className=\"prd-title-input\"\n                placeholder=\"Enter PRD title...\"\n                value={newPRDTitle}\n                onChange={(e) => setNewPRDTitle(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && !saving && createNewPRD()}\n                autoFocus\n                disabled={saving}\n              />\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                className=\"cancel-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n                disabled={saving}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"create-btn\"\n                onClick={createNewPRD}\n                disabled={!newPRDTitle.trim() || saving}\n              >\n                {saving ? 'Creating...' : 'Create PRD'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PRDReviewPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}