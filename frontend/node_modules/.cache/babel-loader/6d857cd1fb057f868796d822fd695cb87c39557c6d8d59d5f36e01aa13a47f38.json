{"ast":null,"code":"import React,{useState,useCallback}from'react';import{useDropzone}from'react-dropzone';import{notionAPI}from'../services/api';import{PageType}from'../types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FileUpload=_ref=>{let{onUploadComplete}=_ref;const[files,setFiles]=useState([]);const[uploading,setUploading]=useState(false);const[uploadProgress,setUploadProgress]=useState({});const[pageTypes,setPageTypes]=useState({});const onDrop=useCallback(acceptedFiles=>{setFiles(prevFiles=>[...prevFiles,...acceptedFiles]);// Set default page type for new files\nconst newPageTypes={};acceptedFiles.forEach(file=>{newPageTypes[file.name]=PageType.research;});setPageTypes(prev=>({...prev,...newPageTypes}));},[]);const{getRootProps,getInputProps,isDragActive}=useDropzone({onDrop,accept:{'application/pdf':['.pdf'],'text/markdown':['.md'],'text/plain':['.txt']},multiple:true});const handleUpload=async()=>{if(files.length===0)return;setUploading(true);const newUploadProgress={};for(const file of files){newUploadProgress[file.name]=0;}setUploadProgress(newUploadProgress);for(const file of files){try{await notionAPI.uploadFile(file,pageTypes[file.name]||PageType.research,progressEvent=>{const percentCompleted=Math.round(progressEvent.loaded*100/(progressEvent.total||1));setUploadProgress(prev=>({...prev,[file.name]:percentCompleted}));});}catch(error){console.error(`Error uploading ${file.name}:`,error);setUploadProgress(prev=>({...prev,[file.name]:-1}));}}setUploading(false);setFiles([]);setPageTypes({});setUploadProgress({});onUploadComplete();};const handleRemoveFile=fileName=>{setFiles(files.filter(file=>file.name!==fileName));const newPageTypes={...pageTypes};delete newPageTypes[fileName];setPageTypes(newPageTypes);};const handlePageTypeChange=(fileName,type)=>{setPageTypes(prev=>({...prev,[fileName]:type}));};const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};const getProgressColor=progress=>{if(progress===-1)return'#e74c3c';if(progress===100)return'#27ae60';return'#667eea';};return/*#__PURE__*/_jsxs(\"div\",{className:\"kb-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-icon\",children:\"\\uD83D\\uDCC1\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"File Upload\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-description\",children:\"Upload documents directly to your knowledge base\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{...getRootProps(),className:`file-dropzone ${isDragActive?'active':''} ${files.length>0?'has-files':''}`,children:[/*#__PURE__*/_jsx(\"input\",{...getInputProps()}),/*#__PURE__*/_jsxs(\"div\",{className:\"dropzone-content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"dropzone-icon\",children:\"\\uD83D\\uDCE4\"}),/*#__PURE__*/_jsx(\"p\",{className:\"dropzone-text\",children:isDragActive?\"Drop the files here...\":\"Drag & drop files here, or click to select\"}),/*#__PURE__*/_jsx(\"p\",{className:\"dropzone-hint\",children:\"Supports PDF, Markdown (.md), and Text (.txt) files\"})]})]}),files.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"files-list\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Files Ready for Upload\"}),files.map(file=>/*#__PURE__*/_jsxs(\"div\",{className:\"file-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"file-name\",children:file.name}),/*#__PURE__*/_jsx(\"div\",{className:\"file-size\",children:formatFileSize(file.size)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-controls\",children:[/*#__PURE__*/_jsxs(\"select\",{value:pageTypes[file.name]||PageType.research,onChange:e=>handlePageTypeChange(file.name,e.target.value),className:\"file-type-select\",disabled:uploading,children:[/*#__PURE__*/_jsx(\"option\",{value:PageType.prd,children:\"PRD\"}),/*#__PURE__*/_jsx(\"option\",{value:PageType.research,children:\"Research\"}),/*#__PURE__*/_jsx(\"option\",{value:PageType.analytics,children:\"Analytics\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveFile(file.name),className:\"btn-remove\",disabled:uploading,children:\"\\u2715\"})]}),uploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:`${Math.max(0,uploadProgress[file.name]||0)}%`,backgroundColor:getProgressColor(uploadProgress[file.name]||0)}})}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-text\",children:uploadProgress[file.name]===-1?'Error':uploadProgress[file.name]===100?'Complete':`${uploadProgress[file.name]||0}%`})]})]},file.name))]}),/*#__PURE__*/_jsx(\"div\",{className:\"upload-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:files.length===0||uploading,className:\"btn-primary\",children:uploading?'Uploading...':`Upload ${files.length} File${files.length!==1?'s':''}`})})]});};export default FileUpload;","map":{"version":3,"names":["React","useState","useCallback","useDropzone","notionAPI","PageType","jsx","_jsx","jsxs","_jsxs","FileUpload","_ref","onUploadComplete","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","pageTypes","setPageTypes","onDrop","acceptedFiles","prevFiles","newPageTypes","forEach","file","name","research","prev","getRootProps","getInputProps","isDragActive","accept","multiple","handleUpload","length","newUploadProgress","uploadFile","progressEvent","percentCompleted","Math","round","loaded","total","error","console","handleRemoveFile","fileName","filter","handlePageTypeChange","type","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","getProgressColor","progress","className","children","map","size","value","onChange","e","target","disabled","prd","analytics","onClick","style","width","max","backgroundColor"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/FileUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\n\ninterface FileUploadProps {\n  onUploadComplete: () => void;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUploadComplete }) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState<Record<string, number>>({});\n  const [pageTypes, setPageTypes] = useState<Record<string, PageType>>({});\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n    // Set default page type for new files\n    const newPageTypes: Record<string, PageType> = {};\n    acceptedFiles.forEach(file => {\n      newPageTypes[file.name] = PageType.research;\n    });\n    setPageTypes(prev => ({ ...prev, ...newPageTypes }));\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/markdown': ['.md'],\n      'text/plain': ['.txt'],\n    },\n    multiple: true,\n  });\n\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n\n    setUploading(true);\n    const newUploadProgress: Record<string, number> = {};\n    \n    for (const file of files) {\n      newUploadProgress[file.name] = 0;\n    }\n    setUploadProgress(newUploadProgress);\n\n    for (const file of files) {\n      try {\n        await notionAPI.uploadFile(\n          file, \n          pageTypes[file.name] || PageType.research,\n          (progressEvent) => {\n            const percentCompleted = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setUploadProgress(prev => ({ ...prev, [file.name]: percentCompleted }));\n          }\n        );\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setUploadProgress(prev => ({ ...prev, [file.name]: -1 }));\n      }\n    }\n\n    setUploading(false);\n    setFiles([]);\n    setPageTypes({});\n    setUploadProgress({});\n    onUploadComplete();\n  };\n  \n  const handleRemoveFile = (fileName: string) => {\n    setFiles(files.filter(file => file.name !== fileName));\n    const newPageTypes = { ...pageTypes };\n    delete newPageTypes[fileName];\n    setPageTypes(newPageTypes);\n  };\n  \n  const handlePageTypeChange = (fileName: string, type: PageType) => {\n    setPageTypes(prev => ({ ...prev, [fileName]: type }));\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const getProgressColor = (progress: number): string => {\n    if (progress === -1) return '#e74c3c';\n    if (progress === 100) return '#27ae60';\n    return '#667eea';\n  };\n\n  return (\n    <div className=\"kb-card\">\n      <div className=\"card-header\">\n        <span className=\"card-icon\">📁</span>\n        <div>\n          <h2 className=\"card-title\">File Upload</h2>\n          <p className=\"card-description\">Upload documents directly to your knowledge base</p>\n        </div>\n      </div>\n\n      <div \n        {...getRootProps()} \n        className={`file-dropzone ${isDragActive ? 'active' : ''} ${files.length > 0 ? 'has-files' : ''}`}\n      >\n        <input {...getInputProps()} />\n        <div className=\"dropzone-content\">\n          <span className=\"dropzone-icon\">📤</span>\n          <p className=\"dropzone-text\">\n            {isDragActive \n              ? \"Drop the files here...\" \n              : \"Drag & drop files here, or click to select\"\n            }\n          </p>\n          <p className=\"dropzone-hint\">Supports PDF, Markdown (.md), and Text (.txt) files</p>\n        </div>\n      </div>\n\n      {files.length > 0 && (\n        <div className=\"files-list\">\n          <h3>Files Ready for Upload</h3>\n          {files.map(file => (\n            <div key={file.name} className=\"file-item\">\n              <div className=\"file-info\">\n                <div className=\"file-name\">{file.name}</div>\n                <div className=\"file-size\">{formatFileSize(file.size)}</div>\n              </div>\n              \n              <div className=\"file-controls\">\n                <select \n                  value={pageTypes[file.name] || PageType.research} \n                  onChange={(e) => handlePageTypeChange(file.name, e.target.value as PageType)}\n                  className=\"file-type-select\"\n                  disabled={uploading}\n                >\n                  <option value={PageType.prd}>PRD</option>\n                  <option value={PageType.research}>Research</option>\n                  <option value={PageType.analytics}>Analytics</option>\n                </select>\n                \n                <button \n                  onClick={() => handleRemoveFile(file.name)}\n                  className=\"btn-remove\"\n                  disabled={uploading}\n                >\n                  ✕\n                </button>\n              </div>\n\n              {uploading && (\n                <div className=\"upload-progress\">\n                  <div className=\"progress-bar\">\n                    <div \n                      className=\"progress-fill\" \n                      style={{ \n                        width: `${Math.max(0, uploadProgress[file.name] || 0)}%`,\n                        backgroundColor: getProgressColor(uploadProgress[file.name] || 0)\n                      }}\n                    />\n                  </div>\n                  <span className=\"progress-text\">\n                    {uploadProgress[file.name] === -1 \n                      ? 'Error' \n                      : uploadProgress[file.name] === 100 \n                      ? 'Complete' \n                      : `${uploadProgress[file.name] || 0}%`\n                    }\n                  </span>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div className=\"upload-actions\">\n        <button \n          onClick={handleUpload} \n          disabled={files.length === 0 || uploading}\n          className=\"btn-primary\"\n        >\n          {uploading ? 'Uploading...' : `Upload ${files.length} File${files.length !== 1 ? 's' : ''}`}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}