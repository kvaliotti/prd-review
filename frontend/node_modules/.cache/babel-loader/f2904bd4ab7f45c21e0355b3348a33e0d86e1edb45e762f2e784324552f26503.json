{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/SettingsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { notionAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPage = () => {\n  _s();\n  const [settings, setSettings] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await notionAPI.getSettings();\n        if (response.data) {\n          setSettings(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching settings:', error);\n        setMessage({\n          type: 'error',\n          text: 'Failed to load settings.'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setSettings(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTestConnection = async () => {\n    if (!settings.notion_token) {\n      setMessage({\n        type: 'error',\n        text: 'Notion token is required to test the connection.'\n      });\n      return;\n    }\n    setIsTesting(true);\n    setMessage(null);\n    try {\n      const response = await notionAPI.testConnection();\n      if (response.data.connected) {\n        setMessage({\n          type: 'success',\n          text: 'Connection successful!'\n        });\n      } else {\n        setMessage({\n          type: 'error',\n          text: `Connection failed: ${response.data.message}`\n        });\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({\n        type: 'error',\n        text: 'An error occurred while testing the connection.'\n      });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    setMessage(null);\n    try {\n      await notionAPI.updateSettings(settings);\n      setMessage({\n        type: 'success',\n        text: 'Settings saved successfully!'\n      });\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({\n        type: 'error',\n        text: 'Failed to save settings.'\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading settings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.type}`,\n      children: message.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"notion_token\",\n        children: \"Notion API Token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"notion_token\",\n        name: \"notion_token\",\n        value: settings.notion_token || '',\n        onChange: handleInputChange,\n        placeholder: \"Enter your Notion API token\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleTestConnection,\n        disabled: isTesting,\n        children: isTesting ? 'Testing...' : 'Test Connection'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Database IDs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"prd_database_id\",\n        children: \"PRDs Database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"prd_database_id\",\n        name: \"prd_database_id\",\n        value: settings.prd_database_id || '',\n        onChange: handleInputChange,\n        placeholder: \"Enter PRDs database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"research_database_id\",\n        children: \"User Research Database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"research_database_id\",\n        name: \"research_database_id\",\n        value: settings.research_database_id || '',\n        onChange: handleInputChange,\n        placeholder: \"Enter User Research database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"analytics_database_id\",\n        children: \"Data Analytics Database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"analytics_database_id\",\n        name: \"analytics_database_id\",\n        value: settings.analytics_database_id || '',\n        onChange: handleInputChange,\n        placeholder: \"Enter Data Analytics database ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      disabled: isSaving,\n      children: isSaving ? 'Saving...' : 'Save Changes'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPage, \"8QFgZ0wzbgL/gcLHziKEyK3Z/Q0=\");\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","notionAPI","jsxDEV","_jsxDEV","SettingsPage","_s","settings","setSettings","isLoading","setIsLoading","isSaving","setIsSaving","isTesting","setIsTesting","message","setMessage","fetchSettings","response","getSettings","data","error","console","type","text","handleInputChange","e","name","value","target","prev","handleTestConnection","notion_token","testConnection","connected","handleSaveChanges","updateSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","placeholder","onClick","disabled","prd_database_id","research_database_id","analytics_database_id","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/SettingsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notionAPI } from '../services/api';\nimport { NotionSettings, NotionSettingsUpdate } from '../types';\n\nconst SettingsPage: React.FC = () => {\n  const [settings, setSettings] = useState<NotionSettingsUpdate>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await notionAPI.getSettings();\n        if (response.data) {\n          setSettings(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching settings:', error);\n        setMessage({ type: 'error', text: 'Failed to load settings.' });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setSettings(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleTestConnection = async () => {\n    if (!settings.notion_token) {\n      setMessage({ type: 'error', text: 'Notion token is required to test the connection.' });\n      return;\n    }\n    setIsTesting(true);\n    setMessage(null);\n    try {\n      const response = await notionAPI.testConnection();\n      if (response.data.connected) {\n        setMessage({ type: 'success', text: 'Connection successful!' });\n      } else {\n        setMessage({ type: 'error', text: `Connection failed: ${response.data.message}` });\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({ type: 'error', text: 'An error occurred while testing the connection.' });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    setMessage(null);\n    try {\n      await notionAPI.updateSettings(settings);\n      setMessage({ type: 'success', text: 'Settings saved successfully!' });\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({ type: 'error', text: 'Failed to save settings.' });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading settings...</div>;\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <h1>Settings</h1>\n      \n      {message && (\n        <div className={`message ${message.type}`}>\n          {message.text}\n        </div>\n      )}\n\n      <div className=\"form-group\">\n        <label htmlFor=\"notion_token\">Notion API Token</label>\n        <input\n          type=\"password\"\n          id=\"notion_token\"\n          name=\"notion_token\"\n          value={settings.notion_token || ''}\n          onChange={handleInputChange}\n          placeholder=\"Enter your Notion API token\"\n        />\n        <button onClick={handleTestConnection} disabled={isTesting}>\n          {isTesting ? 'Testing...' : 'Test Connection'}\n        </button>\n      </div>\n\n      <h2>Database IDs</h2>\n      <div className=\"form-group\">\n        <label htmlFor=\"prd_database_id\">PRDs Database ID</label>\n        <input\n          type=\"text\"\n          id=\"prd_database_id\"\n          name=\"prd_database_id\"\n          value={settings.prd_database_id || ''}\n          onChange={handleInputChange}\n          placeholder=\"Enter PRDs database ID\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"research_database_id\">User Research Database ID</label>\n        <input\n          type=\"text\"\n          id=\"research_database_id\"\n          name=\"research_database_id\"\n          value={settings.research_database_id || ''}\n          onChange={handleInputChange}\n          placeholder=\"Enter User Research database ID\"\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <label htmlFor=\"analytics_database_id\">Data Analytics Database ID</label>\n        <input\n          type=\"text\"\n          id=\"analytics_database_id\"\n          name=\"analytics_database_id\"\n          value={settings.analytics_database_id || ''}\n          onChange={handleInputChange}\n          placeholder=\"Enter Data Analytics database ID\"\n        />\n      </div>\n\n      <button onClick={handleSaveChanges} disabled={isSaving}>\n        {isSaving ? 'Saving...' : 'Save Changes'}\n      </button>\n    </div>\n  );\n};\n\nexport default SettingsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}