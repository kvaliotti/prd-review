{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/ChatInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { chatAPI } from '../services/api';\nimport './ChatInterface.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatInterface = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useAuth();\n  const [chats, setChats] = useState([]);\n  const [selectedChat, setSelectedChat] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n  const [showNewChatModal, setShowNewChatModal] = useState(false);\n  const [showChatSettings, setShowChatSettings] = useState(false);\n  const [regeneratingTitle, setRegeneratingTitle] = useState(false);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    fetchChats();\n    checkHealth();\n  }, []);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const checkHealth = async () => {\n    try {\n      const response = await chatAPI.healthCheck();\n      console.log('API Health:', response.data);\n    } catch (error) {\n      console.error('Health check failed:', error);\n    }\n  };\n  const fetchChats = async () => {\n    try {\n      const response = await chatAPI.getChats();\n      setChats(response.data);\n    } catch (error) {\n      console.error('Failed to fetch chats:', error);\n    }\n  };\n  const fetchMessages = async chatId => {\n    try {\n      const response = await chatAPI.getChatMessages(chatId);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n    }\n  };\n  const handleChatSelect = chat => {\n    setSelectedChat(chat);\n    setShowChatSettings(false);\n    fetchMessages(chat.id);\n  };\n  const handleCreateChat = async () => {\n    if (!newChatTitle.trim()) return;\n    try {\n      const response = await chatAPI.createChat(newChatTitle);\n      setChats([response.data, ...chats]);\n      setSelectedChat(response.data);\n      setMessages([]);\n      setNewChatTitle('');\n      setShowNewChatModal(false);\n    } catch (error) {\n      console.error('Failed to create chat:', error);\n    }\n  };\n  const handleRegenerateTitle = async () => {\n    if (!selectedChat) return;\n    setRegeneratingTitle(true);\n    try {\n      const response = await chatAPI.generateChatTitle(selectedChat.id);\n      const newTitle = response.data.title;\n\n      // Update selected chat\n      setSelectedChat({\n        ...selectedChat,\n        title: newTitle\n      });\n\n      // Update chat in the list\n      setChats(prevChats => prevChats.map(chat => chat.id === selectedChat.id ? {\n        ...chat,\n        title: newTitle\n      } : chat));\n      setShowChatSettings(false);\n    } catch (error) {\n      console.error('Failed to regenerate title:', error);\n    } finally {\n      setRegeneratingTitle(false);\n    }\n  };\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!selectedChat || !newMessage.trim()) return;\n    const userMessage = newMessage;\n    setNewMessage('');\n    setLoading(true);\n\n    // Add user message to UI immediately\n    const tempMessage = {\n      id: Date.now(),\n      chat_id: selectedChat.id,\n      role: 'user',\n      content: userMessage,\n      created_at: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, tempMessage]);\n    try {\n      const response = await chatAPI.sendMessage(selectedChat.id, userMessage);\n\n      // Refresh messages to get the actual saved messages\n      await fetchMessages(selectedChat.id);\n      await fetchChats(); // Update chat list to reflect new activity\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      // Remove the temporary message on error\n      setMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatMessageTime = dateString => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diff / (1000 * 60 * 60 * 24));\n    if (diffDays === 0) {\n      return date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else if (diffDays === 1) {\n      return 'Yesterday ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    } else {\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowNewChatModal(true),\n          children: \"New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-list\",\n        children: [chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-item ${(selectedChat === null || selectedChat === void 0 ? void 0 : selectedChat.id) === chat.id ? 'active' : ''}`,\n          onClick: () => handleChatSelect(chat),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-title\",\n            title: chat.title,\n            children: chat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-meta\",\n            children: [chat.message_count, \" messages \\u2022 \", formatMessageTime(chat.updated_at)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)]\n        }, chat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)), chats.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-chats\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No chats yet. Create your first chat to get started!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-links\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/knowledge-base\",\n            children: \"Knowledge Base\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/settings\",\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-main\",\n      children: selectedChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: selectedChat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowChatSettings(!showChatSettings),\n                className: \"settings-btn\",\n                title: \"Chat settings\",\n                children: \"\\u2699\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), showChatSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-settings\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleRegenerateTitle,\n              disabled: regeneratingTitle,\n              className: \"regenerate-title-btn\",\n              children: regeneratingTitle ? 'Generating...' : '🔄 Regenerate Title'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-info\",\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                children: [\"Created: \", formatMessageTime(selectedChat.created_at), \" \\u2022 Last updated: \", formatMessageTime(selectedChat.updated_at)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messages-container\",\n          children: [messages.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-messages\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"welcome-message\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Welcome to your chat!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Start a conversation by typing a message below.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this), messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `message ${message.role}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-time\",\n              children: formatMessageTime(message.created_at)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this)]\n          }, message.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message assistant\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-content\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"typing-indicator\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), \"AI is thinking...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendMessage,\n          className: \"message-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            disabled: loading,\n            className: \"message-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading || !newMessage.trim(),\n            className: \"send-btn\",\n            children: loading ? '...' : 'Send'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-chat-selected\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-screen\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Welcome to Chat App\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a chat from the sidebar to start messaging, or create a new chat to begin.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewChatModal(true),\n            className: \"welcome-new-chat-btn\",\n            children: \"Create Your First Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), showNewChatModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setShowNewChatModal(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newChatTitle,\n          onChange: e => setNewChatTitle(e.target.value),\n          placeholder: \"Enter chat title...\",\n          className: \"modal-input\",\n          autoFocus: true,\n          onKeyPress: e => e.key === 'Enter' && handleCreateChat()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowNewChatModal(false),\n            className: \"modal-btn cancel\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCreateChat,\n            className: \"modal-btn create\",\n            disabled: !newChatTitle.trim(),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"4MQMYEJDzWTIMRiXrwQ0dKA4z/o=\", false, function () {\n  return [useAuth];\n});\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useAuth","chatAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatInterface","_s","user","logout","chats","setChats","selectedChat","setSelectedChat","messages","setMessages","newMessage","setNewMessage","loading","setLoading","newChatTitle","setNewChatTitle","showNewChatModal","setShowNewChatModal","showChatSettings","setShowChatSettings","regeneratingTitle","setRegeneratingTitle","messagesEndRef","fetchChats","checkHealth","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","response","healthCheck","console","log","data","error","getChats","fetchMessages","chatId","getChatMessages","handleChatSelect","chat","id","handleCreateChat","trim","createChat","handleRegenerateTitle","generateChatTitle","newTitle","title","prevChats","map","handleSendMessage","e","preventDefault","userMessage","tempMessage","Date","now","chat_id","role","content","created_at","toISOString","prev","sendMessage","filter","msg","formatMessageTime","dateString","date","diff","getTime","diffDays","Math","floor","toLocaleTimeString","hour","minute","toLocaleDateString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","message_count","updated_at","length","to","email","disabled","message","ref","onSubmit","type","value","onChange","target","placeholder","stopPropagation","autoFocus","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/ChatInterface.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { chatAPI } from '../services/api';\nimport { Chat, Message } from '../types';\nimport './ChatInterface.css';\n\nconst ChatInterface: React.FC = () => {\n  const { user, logout } = useAuth();\n  const [chats, setChats] = useState<Chat[]>([]);\n  const [selectedChat, setSelectedChat] = useState<Chat | null>(null);\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [newChatTitle, setNewChatTitle] = useState('');\n  const [showNewChatModal, setShowNewChatModal] = useState(false);\n  const [showChatSettings, setShowChatSettings] = useState(false);\n  const [regeneratingTitle, setRegeneratingTitle] = useState(false);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    fetchChats();\n    checkHealth();\n  }, []);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const checkHealth = async () => {\n    try {\n      const response = await chatAPI.healthCheck();\n      console.log('API Health:', response.data);\n    } catch (error) {\n      console.error('Health check failed:', error);\n    }\n  };\n\n  const fetchChats = async () => {\n    try {\n      const response = await chatAPI.getChats();\n      setChats(response.data);\n    } catch (error) {\n      console.error('Failed to fetch chats:', error);\n    }\n  };\n\n  const fetchMessages = async (chatId: number) => {\n    try {\n      const response = await chatAPI.getChatMessages(chatId);\n      setMessages(response.data);\n    } catch (error) {\n      console.error('Failed to fetch messages:', error);\n    }\n  };\n\n  const handleChatSelect = (chat: Chat) => {\n    setSelectedChat(chat);\n    setShowChatSettings(false);\n    fetchMessages(chat.id);\n  };\n\n  const handleCreateChat = async () => {\n    if (!newChatTitle.trim()) return;\n\n    try {\n      const response = await chatAPI.createChat(newChatTitle);\n      setChats([response.data, ...chats]);\n      setSelectedChat(response.data);\n      setMessages([]);\n      setNewChatTitle('');\n      setShowNewChatModal(false);\n    } catch (error) {\n      console.error('Failed to create chat:', error);\n    }\n  };\n\n  const handleRegenerateTitle = async () => {\n    if (!selectedChat) return;\n\n    setRegeneratingTitle(true);\n    try {\n      const response = await chatAPI.generateChatTitle(selectedChat.id);\n      const newTitle = response.data.title;\n      \n      // Update selected chat\n      setSelectedChat({ ...selectedChat, title: newTitle });\n      \n      // Update chat in the list\n      setChats(prevChats => \n        prevChats.map(chat => \n          chat.id === selectedChat.id \n            ? { ...chat, title: newTitle }\n            : chat\n        )\n      );\n      \n      setShowChatSettings(false);\n    } catch (error) {\n      console.error('Failed to regenerate title:', error);\n    } finally {\n      setRegeneratingTitle(false);\n    }\n  };\n\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedChat || !newMessage.trim()) return;\n\n    const userMessage = newMessage;\n    setNewMessage('');\n    setLoading(true);\n\n    // Add user message to UI immediately\n    const tempMessage: Message = {\n      id: Date.now(),\n      chat_id: selectedChat.id,\n      role: 'user',\n      content: userMessage,\n      created_at: new Date().toISOString(),\n    };\n    setMessages(prev => [...prev, tempMessage]);\n\n    try {\n      const response = await chatAPI.sendMessage(selectedChat.id, userMessage);\n      \n      // Refresh messages to get the actual saved messages\n      await fetchMessages(selectedChat.id);\n      await fetchChats(); // Update chat list to reflect new activity\n    } catch (error) {\n      console.error('Failed to send message:', error);\n      // Remove the temporary message on error\n      setMessages(prev => prev.filter(msg => msg.id !== tempMessage.id));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatMessageTime = (dateString: string) => {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diff = now.getTime() - date.getTime();\n    const diffDays = Math.floor(diff / (1000 * 60 * 60 * 24));\n\n    if (diffDays === 0) {\n      return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else if (diffDays === 1) {\n      return 'Yesterday ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    } else {\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      {/* Sidebar */}\n      <div className=\"sidebar\">\n        <div className=\"sidebar-header\">\n          <h2>Conversations</h2>\n          <button onClick={() => setShowNewChatModal(true)}>New Chat</button>\n        </div>\n        <div className=\"chat-list\">\n          {chats.map((chat) => (\n            <div\n              key={chat.id}\n              className={`chat-item ${selectedChat?.id === chat.id ? 'active' : ''}`}\n              onClick={() => handleChatSelect(chat)}\n            >\n              <div className=\"chat-title\" title={chat.title}>{chat.title}</div>\n              <div className=\"chat-meta\">\n                {chat.message_count} messages • {formatMessageTime(chat.updated_at)}\n              </div>\n            </div>\n          ))}\n          {chats.length === 0 && (\n            <div className=\"no-chats\">\n              <p>No chats yet. Create your first chat to get started!</p>\n            </div>\n          )}\n        </div>\n        <div className=\"sidebar-footer\">\n          <div className=\"nav-links\">\n            <Link to=\"/knowledge-base\">Knowledge Base</Link>\n            <Link to=\"/settings\">Settings</Link>\n          </div>\n          {user && (\n            <div className=\"user-info\">\n              <span>{user.email}</span>\n              <button onClick={logout}>Logout</button>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Main Chat Area */}\n      <div className=\"chat-main\">\n        {selectedChat ? (\n          <>\n            <div className=\"chat-header\">\n              <div className=\"chat-header-content\">\n                <h2>{selectedChat.title}</h2>\n                <div className=\"chat-actions\">\n                  <button \n                    onClick={() => setShowChatSettings(!showChatSettings)}\n                    className=\"settings-btn\"\n                    title=\"Chat settings\"\n                  >\n                    ⚙️\n                  </button>\n                </div>\n              </div>\n              \n              {showChatSettings && (\n                <div className=\"chat-settings\">\n                  <button \n                    onClick={handleRegenerateTitle}\n                    disabled={regeneratingTitle}\n                    className=\"regenerate-title-btn\"\n                  >\n                    {regeneratingTitle ? 'Generating...' : '🔄 Regenerate Title'}\n                  </button>\n                  <div className=\"chat-info\">\n                    <small>\n                      Created: {formatMessageTime(selectedChat.created_at)} • \n                      Last updated: {formatMessageTime(selectedChat.updated_at)}\n                    </small>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            <div className=\"messages-container\">\n              {messages.length === 0 && (\n                <div className=\"no-messages\">\n                  <div className=\"welcome-message\">\n                    <h3>Welcome to your chat!</h3>\n                    <p>Start a conversation by typing a message below.</p>\n                  </div>\n                </div>\n              )}\n              \n              {messages.map((message) => (\n                <div\n                  key={message.id}\n                  className={`message ${message.role}`}\n                >\n                  <div className=\"message-content\">\n                    {message.content}\n                  </div>\n                  <div className=\"message-time\">\n                    {formatMessageTime(message.created_at)}\n                  </div>\n                </div>\n              ))}\n              \n              {loading && (\n                <div className=\"message assistant\">\n                  <div className=\"message-content\">\n                    <div className=\"typing-indicator\">\n                      <span></span>\n                      <span></span>\n                      <span></span>\n                      AI is thinking...\n                    </div>\n                  </div>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </div>\n\n            <form onSubmit={handleSendMessage} className=\"message-form\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n                disabled={loading}\n                className=\"message-input\"\n              />\n              <button \n                type=\"submit\" \n                disabled={loading || !newMessage.trim()}\n                className=\"send-btn\"\n              >\n                {loading ? '...' : 'Send'}\n              </button>\n            </form>\n          </>\n        ) : (\n          <div className=\"no-chat-selected\">\n            <div className=\"welcome-screen\">\n              <h2>Welcome to Chat App</h2>\n              <p>Select a chat from the sidebar to start messaging, or create a new chat to begin.</p>\n              <button \n                onClick={() => setShowNewChatModal(true)}\n                className=\"welcome-new-chat-btn\"\n              >\n                Create Your First Chat\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* New Chat Modal */}\n      {showNewChatModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowNewChatModal(false)}>\n          <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\n            <h3>Create New Chat</h3>\n            <input\n              type=\"text\"\n              value={newChatTitle}\n              onChange={(e) => setNewChatTitle(e.target.value)}\n              placeholder=\"Enter chat title...\"\n              className=\"modal-input\"\n              autoFocus\n              onKeyPress={(e) => e.key === 'Enter' && handleCreateChat()}\n            />\n            <div className=\"modal-buttons\">\n              <button \n                onClick={() => setShowNewChatModal(false)}\n                className=\"modal-btn cancel\"\n              >\n                Cancel\n              </button>\n              <button \n                onClick={handleCreateChat}\n                className=\"modal-btn create\"\n                disabled={!newChatTitle.trim()}\n              >\n                Create\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}