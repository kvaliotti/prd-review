{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/SettingsPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { notionAPI } from '../services/api';\nimport './SettingsPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingsPage = () => {\n  _s();\n  const [settings, setSettings] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n  const [message, setMessage] = useState(null);\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await notionAPI.getSettings();\n        if (response.data) {\n          setSettings({\n            notion_token: response.data.notion_token || '',\n            prd_database_id: response.data.prd_database_id || '',\n            research_database_id: response.data.research_database_id || '',\n            analytics_database_id: response.data.analytics_database_id || ''\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching settings:', error);\n        setMessage({\n          type: 'error',\n          text: 'Failed to load settings.'\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setSettings(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleTestConnection = async () => {\n    if (!settings.notion_token) {\n      setMessage({\n        type: 'error',\n        text: 'Notion token is required to test the connection.'\n      });\n      return;\n    }\n    setIsTesting(true);\n    setMessage(null);\n    try {\n      // Pass the whole settings object, let the backend handle it\n      const response = await notionAPI.testConnection(settings);\n      if (response.data.connected) {\n        setMessage({\n          type: 'success',\n          text: 'Connection successful!'\n        });\n      } else {\n        setMessage({\n          type: 'error',\n          text: `Connection failed: ${response.data.message}`\n        });\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({\n        type: 'error',\n        text: 'An error occurred while testing the connection.'\n      });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    setMessage(null);\n    try {\n      await notionAPI.updateSettings(settings);\n      setMessage({\n        type: 'success',\n        text: 'Settings saved successfully!'\n      });\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({\n        type: 'error',\n        text: 'Failed to save settings.'\n      });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading settings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Configure your Notion integration and manage your knowledge base imports\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.type}`,\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-icon\",\n              children: \"\\uD83D\\uDD17\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"card-title\",\n                children: \"Notion API Connection\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: \"Connect your Notion workspace to import documents\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"notion_token\",\n              children: \"Notion API Token\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"notion_token\",\n                name: \"notion_token\",\n                value: settings.notion_token || '',\n                onChange: handleInputChange,\n                placeholder: \"Enter your Notion API token (secret_...)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-secondary\",\n                onClick: handleTestConnection,\n                disabled: isTesting,\n                children: isTesting ? 'Testing...' : 'Test Connection'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"card-icon\",\n              children: \"\\uD83D\\uDCCA\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"card-title\",\n                children: \"Database Configuration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-description\",\n                children: \"Select which Notion databases to import from\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"database-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `database-group ${settings.import_prd ? 'enabled' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"database-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"import_prd\",\n                  name: \"import_prd\",\n                  checked: settings.import_prd || false,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"import_prd\",\n                  children: \"Import Product Requirements Documents (PRDs)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"prd_database_id\",\n                value: settings.prd_database_id || '',\n                onChange: handleInputChange,\n                placeholder: \"Enter PRDs database ID\",\n                disabled: !settings.import_prd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `database-group ${settings.import_research ? 'enabled' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"database-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"import_research\",\n                  name: \"import_research\",\n                  checked: settings.import_research || false,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"import_research\",\n                  children: \"Import User Research Documents\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"research_database_id\",\n                value: settings.research_database_id || '',\n                onChange: handleInputChange,\n                placeholder: \"Enter User Research database ID\",\n                disabled: !settings.import_research\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `database-group ${settings.import_analytics ? 'enabled' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"database-checkbox\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  id: \"import_analytics\",\n                  name: \"import_analytics\",\n                  checked: settings.import_analytics || false,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"import_analytics\",\n                  children: \"Import Data Analytics Reports\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"analytics_database_id\",\n                value: settings.analytics_database_id || '',\n                onChange: handleInputChange,\n                placeholder: \"Enter Data Analytics database ID\",\n                disabled: !settings.import_analytics\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-primary\",\n              onClick: handleSaveChanges,\n              disabled: isSaving,\n              children: isSaving ? 'Saving...' : 'Save Configuration'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(SettingsPage, \"8QFgZ0wzbgL/gcLHziKEyK3Z/Q0=\");\n_c = SettingsPage;\nexport default SettingsPage;\nvar _c;\n$RefreshReg$(_c, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","notionAPI","jsxDEV","_jsxDEV","SettingsPage","_s","settings","setSettings","isLoading","setIsLoading","isSaving","setIsSaving","isTesting","setIsTesting","message","setMessage","fetchSettings","response","getSettings","data","notion_token","prd_database_id","research_database_id","analytics_database_id","error","console","type","text","handleInputChange","e","name","value","checked","target","prev","handleTestConnection","testConnection","connected","handleSaveChanges","updateSettings","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","placeholder","onClick","disabled","import_prd","import_research","import_analytics","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/SettingsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notionAPI } from '../services/api';\nimport { NotionSettingsUpdate } from '../types';\nimport './SettingsPage.css';\n\nconst SettingsPage: React.FC = () => {\n  const [settings, setSettings] = useState<NotionSettingsUpdate>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await notionAPI.getSettings();\n        if (response.data) {\n          setSettings({\n            notion_token: response.data.notion_token || '',\n            prd_database_id: response.data.prd_database_id || '',\n            research_database_id: response.data.research_database_id || '',\n            analytics_database_id: response.data.analytics_database_id || '',\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching settings:', error);\n        setMessage({ type: 'error', text: 'Failed to load settings.' });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setSettings(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n  };\n\n  const handleTestConnection = async () => {\n    if (!settings.notion_token) {\n      setMessage({ type: 'error', text: 'Notion token is required to test the connection.' });\n      return;\n    }\n    setIsTesting(true);\n    setMessage(null);\n    try {\n      // Pass the whole settings object, let the backend handle it\n      const response = await notionAPI.testConnection(settings);\n      if (response.data.connected) {\n        setMessage({ type: 'success', text: 'Connection successful!' });\n      } else {\n        setMessage({ type: 'error', text: `Connection failed: ${response.data.message}` });\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({ type: 'error', text: 'An error occurred while testing the connection.' });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    setMessage(null);\n    try {\n      await notionAPI.updateSettings(settings);\n      setMessage({ type: 'success', text: 'Settings saved successfully!' });\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({ type: 'error', text: 'Failed to save settings.' });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading settings...</div>;\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-container\">\n        <div className=\"settings-header\">\n          <h1>Settings</h1>\n          <p>Configure your Notion integration and manage your knowledge base imports</p>\n        </div>\n        \n        {message && (\n          <div className={`message ${message.type}`}>\n            {message.text}\n          </div>\n        )}\n\n        <div className=\"settings-content\">\n          <div className=\"settings-card\">\n            <div className=\"card-header\">\n              <span className=\"card-icon\">🔗</span>\n              <div>\n                <h2 className=\"card-title\">Notion API Connection</h2>\n                <p className=\"card-description\">Connect your Notion workspace to import documents</p>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"notion_token\">Notion API Token</label>\n              <div className=\"input-group\">\n                <input\n                  type=\"password\"\n                  id=\"notion_token\"\n                  name=\"notion_token\"\n                  value={settings.notion_token || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your Notion API token (secret_...)\"\n                />\n                <button \n                  className=\"btn-secondary\" \n                  onClick={handleTestConnection} \n                  disabled={isTesting}\n                >\n                  {isTesting ? 'Testing...' : 'Test Connection'}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"settings-card\">\n            <div className=\"card-header\">\n              <span className=\"card-icon\">📊</span>\n              <div>\n                <h2 className=\"card-title\">Database Configuration</h2>\n                <p className=\"card-description\">Select which Notion databases to import from</p>\n              </div>\n            </div>\n\n            <div className=\"database-section\">\n              <div className={`database-group ${settings.import_prd ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_prd\"\n                    name=\"import_prd\"\n                    checked={settings.import_prd || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_prd\">Import Product Requirements Documents (PRDs)</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"prd_database_id\"\n                  value={settings.prd_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter PRDs database ID\"\n                  disabled={!settings.import_prd}\n                />\n              </div>\n\n              <div className={`database-group ${settings.import_research ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_research\"\n                    name=\"import_research\"\n                    checked={settings.import_research || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_research\">Import User Research Documents</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"research_database_id\"\n                  value={settings.research_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter User Research database ID\"\n                  disabled={!settings.import_research}\n                />\n              </div>\n\n              <div className={`database-group ${settings.import_analytics ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_analytics\"\n                    name=\"import_analytics\"\n                    checked={settings.import_analytics || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_analytics\">Import Data Analytics Reports</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"analytics_database_id\"\n                  value={settings.analytics_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Data Analytics database ID\"\n                  disabled={!settings.import_analytics}\n                />\n              </div>\n            </div>\n\n            <div className=\"button-group\">\n              <button className=\"btn-primary\" onClick={handleSaveChanges} disabled={isSaving}>\n                {isSaving ? 'Saving...' : 'Save Configuration'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsPage; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAE3C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAuB,CAAC,CAAC,CAAC;EAClE,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAqD,IAAI,CAAC;EAEhGC,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,SAAS,CAACiB,WAAW,CAAC,CAAC;QAC9C,IAAID,QAAQ,CAACE,IAAI,EAAE;UACjBZ,WAAW,CAAC;YACVa,YAAY,EAAEH,QAAQ,CAACE,IAAI,CAACC,YAAY,IAAI,EAAE;YAC9CC,eAAe,EAAEJ,QAAQ,CAACE,IAAI,CAACE,eAAe,IAAI,EAAE;YACpDC,oBAAoB,EAAEL,QAAQ,CAACE,IAAI,CAACG,oBAAoB,IAAI,EAAE;YAC9DC,qBAAqB,EAAEN,QAAQ,CAACE,IAAI,CAACI,qBAAqB,IAAI;UAChE,CAAC,CAAC;QACJ;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDT,UAAU,CAAC;UAAEW,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE;QAA2B,CAAC,CAAC;MACjE,CAAC,SAAS;QACRlB,YAAY,CAAC,KAAK,CAAC;MACrB;IACF,CAAC;IACDO,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAM;MAAEC,IAAI;MAAEC,KAAK;MAAEL,IAAI;MAAEM;IAAQ,CAAC,GAAGH,CAAC,CAACI,MAAM;IAC/C1B,WAAW,CAAC2B,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACJ,IAAI,GAAGJ,IAAI,KAAK,UAAU,GAAGM,OAAO,GAAGD;IAAM,CAAC,CAAC,CAAC;EACnF,CAAC;EAED,MAAMI,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAAC7B,QAAQ,CAACc,YAAY,EAAE;MAC1BL,UAAU,CAAC;QAAEW,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAmD,CAAC,CAAC;MACvF;IACF;IACAd,YAAY,CAAC,IAAI,CAAC;IAClBE,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF;MACA,MAAME,QAAQ,GAAG,MAAMhB,SAAS,CAACmC,cAAc,CAAC9B,QAAQ,CAAC;MACzD,IAAIW,QAAQ,CAACE,IAAI,CAACkB,SAAS,EAAE;QAC3BtB,UAAU,CAAC;UAAEW,IAAI,EAAE,SAAS;UAAEC,IAAI,EAAE;QAAyB,CAAC,CAAC;MACjE,CAAC,MAAM;QACLZ,UAAU,CAAC;UAAEW,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE,sBAAsBV,QAAQ,CAACE,IAAI,CAACL,OAAO;QAAG,CAAC,CAAC;MACpF;IACF,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDT,UAAU,CAAC;QAAEW,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAAkD,CAAC,CAAC;IACxF,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC3B,WAAW,CAAC,IAAI,CAAC;IACjBI,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMd,SAAS,CAACsC,cAAc,CAACjC,QAAQ,CAAC;MACxCS,UAAU,CAAC;QAAEW,IAAI,EAAE,SAAS;QAAEC,IAAI,EAAE;MAA+B,CAAC,CAAC;IACvE,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CT,UAAU,CAAC;QAAEW,IAAI,EAAE,OAAO;QAAEC,IAAI,EAAE;MAA2B,CAAC,CAAC;IACjE,CAAC,SAAS;MACRhB,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,IAAIH,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAqC,QAAA,EAAK;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACvC;EAEA,oBACEzC,OAAA;IAAK0C,SAAS,EAAC,eAAe;IAAAL,QAAA,eAC5BrC,OAAA;MAAK0C,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACjCrC,OAAA;QAAK0C,SAAS,EAAC,iBAAiB;QAAAL,QAAA,gBAC9BrC,OAAA;UAAAqC,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjBzC,OAAA;UAAAqC,QAAA,EAAG;QAAwE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,EAEL9B,OAAO,iBACNX,OAAA;QAAK0C,SAAS,EAAE,WAAW/B,OAAO,CAACY,IAAI,EAAG;QAAAc,QAAA,EACvC1B,OAAO,CAACa;MAAI;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACN,eAEDzC,OAAA;QAAK0C,SAAS,EAAC,kBAAkB;QAAAL,QAAA,gBAC/BrC,OAAA;UAAK0C,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC5BrC,OAAA;YAAK0C,SAAS,EAAC,aAAa;YAAAL,QAAA,gBAC1BrC,OAAA;cAAM0C,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrCzC,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAI0C,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAC;cAAqB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACrDzC,OAAA;gBAAG0C,SAAS,EAAC,kBAAkB;gBAAAL,QAAA,EAAC;cAAiD;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClF,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzC,OAAA;YAAK0C,SAAS,EAAC,YAAY;YAAAL,QAAA,gBACzBrC,OAAA;cAAO2C,OAAO,EAAC,cAAc;cAAAN,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACtDzC,OAAA;cAAK0C,SAAS,EAAC,aAAa;cAAAL,QAAA,gBAC1BrC,OAAA;gBACEuB,IAAI,EAAC,UAAU;gBACfqB,EAAE,EAAC,cAAc;gBACjBjB,IAAI,EAAC,cAAc;gBACnBC,KAAK,EAAEzB,QAAQ,CAACc,YAAY,IAAI,EAAG;gBACnC4B,QAAQ,EAAEpB,iBAAkB;gBAC5BqB,WAAW,EAAC;cAA0C;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvD,CAAC,eACFzC,OAAA;gBACE0C,SAAS,EAAC,eAAe;gBACzBK,OAAO,EAAEf,oBAAqB;gBAC9BgB,QAAQ,EAAEvC,SAAU;gBAAA4B,QAAA,EAEnB5B,SAAS,GAAG,YAAY,GAAG;cAAiB;gBAAA6B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENzC,OAAA;UAAK0C,SAAS,EAAC,eAAe;UAAAL,QAAA,gBAC5BrC,OAAA;YAAK0C,SAAS,EAAC,aAAa;YAAAL,QAAA,gBAC1BrC,OAAA;cAAM0C,SAAS,EAAC,WAAW;cAAAL,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACrCzC,OAAA;cAAAqC,QAAA,gBACErC,OAAA;gBAAI0C,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAC;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACtDzC,OAAA;gBAAG0C,SAAS,EAAC,kBAAkB;gBAAAL,QAAA,EAAC;cAA4C;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7E,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzC,OAAA;YAAK0C,SAAS,EAAC,kBAAkB;YAAAL,QAAA,gBAC/BrC,OAAA;cAAK0C,SAAS,EAAE,kBAAkBvC,QAAQ,CAAC8C,UAAU,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAZ,QAAA,gBACvErC,OAAA;gBAAK0C,SAAS,EAAC,mBAAmB;gBAAAL,QAAA,gBAChCrC,OAAA;kBACEuB,IAAI,EAAC,UAAU;kBACfqB,EAAE,EAAC,YAAY;kBACfjB,IAAI,EAAC,YAAY;kBACjBE,OAAO,EAAE1B,QAAQ,CAAC8C,UAAU,IAAI,KAAM;kBACtCJ,QAAQ,EAAEpB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,eACFzC,OAAA;kBAAO2C,OAAO,EAAC,YAAY;kBAAAN,QAAA,EAAC;gBAA4C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7E,CAAC,eACNzC,OAAA;gBACEuB,IAAI,EAAC,MAAM;gBACXI,IAAI,EAAC,iBAAiB;gBACtBC,KAAK,EAAEzB,QAAQ,CAACe,eAAe,IAAI,EAAG;gBACtC2B,QAAQ,EAAEpB,iBAAkB;gBAC5BqB,WAAW,EAAC,wBAAwB;gBACpCE,QAAQ,EAAE,CAAC7C,QAAQ,CAAC8C;cAAW;gBAAAX,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENzC,OAAA;cAAK0C,SAAS,EAAE,kBAAkBvC,QAAQ,CAAC+C,eAAe,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAb,QAAA,gBAC5ErC,OAAA;gBAAK0C,SAAS,EAAC,mBAAmB;gBAAAL,QAAA,gBAChCrC,OAAA;kBACEuB,IAAI,EAAC,UAAU;kBACfqB,EAAE,EAAC,iBAAiB;kBACpBjB,IAAI,EAAC,iBAAiB;kBACtBE,OAAO,EAAE1B,QAAQ,CAAC+C,eAAe,IAAI,KAAM;kBAC3CL,QAAQ,EAAEpB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,eACFzC,OAAA;kBAAO2C,OAAO,EAAC,iBAAiB;kBAAAN,QAAA,EAAC;gBAA8B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpE,CAAC,eACNzC,OAAA;gBACEuB,IAAI,EAAC,MAAM;gBACXI,IAAI,EAAC,sBAAsB;gBAC3BC,KAAK,EAAEzB,QAAQ,CAACgB,oBAAoB,IAAI,EAAG;gBAC3C0B,QAAQ,EAAEpB,iBAAkB;gBAC5BqB,WAAW,EAAC,iCAAiC;gBAC7CE,QAAQ,EAAE,CAAC7C,QAAQ,CAAC+C;cAAgB;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENzC,OAAA;cAAK0C,SAAS,EAAE,kBAAkBvC,QAAQ,CAACgD,gBAAgB,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAd,QAAA,gBAC7ErC,OAAA;gBAAK0C,SAAS,EAAC,mBAAmB;gBAAAL,QAAA,gBAChCrC,OAAA;kBACEuB,IAAI,EAAC,UAAU;kBACfqB,EAAE,EAAC,kBAAkB;kBACrBjB,IAAI,EAAC,kBAAkB;kBACvBE,OAAO,EAAE1B,QAAQ,CAACgD,gBAAgB,IAAI,KAAM;kBAC5CN,QAAQ,EAAEpB;gBAAkB;kBAAAa,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,eACFzC,OAAA;kBAAO2C,OAAO,EAAC,kBAAkB;kBAAAN,QAAA,EAAC;gBAA6B;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACpE,CAAC,eACNzC,OAAA;gBACEuB,IAAI,EAAC,MAAM;gBACXI,IAAI,EAAC,uBAAuB;gBAC5BC,KAAK,EAAEzB,QAAQ,CAACiB,qBAAqB,IAAI,EAAG;gBAC5CyB,QAAQ,EAAEpB,iBAAkB;gBAC5BqB,WAAW,EAAC,kCAAkC;gBAC9CE,QAAQ,EAAE,CAAC7C,QAAQ,CAACgD;cAAiB;gBAAAb,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENzC,OAAA;YAAK0C,SAAS,EAAC,cAAc;YAAAL,QAAA,eAC3BrC,OAAA;cAAQ0C,SAAS,EAAC,aAAa;cAACK,OAAO,EAAEZ,iBAAkB;cAACa,QAAQ,EAAEzC,QAAS;cAAA8B,QAAA,EAC5E9B,QAAQ,GAAG,WAAW,GAAG;YAAoB;cAAA+B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CA7MID,YAAsB;AAAAmD,EAAA,GAAtBnD,YAAsB;AA+M5B,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}