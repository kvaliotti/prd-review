{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/PRDReviewPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\nimport './PRDReviewPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PRDReviewPage = () => {\n  _s();\n  // State management\n  const [prdDocuments, setPrdDocuments] = useState([]);\n  const [selectedPRD, setSelectedPRD] = useState(null);\n  const [localPRDs, setLocalPRDs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [editorContent, setEditorContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [showNewPRDModal, setShowNewPRDModal] = useState(false);\n  const [newPRDTitle, setNewPRDTitle] = useState('');\n\n  // Load PRDs on component mount\n  useEffect(() => {\n    loadPRDs();\n    loadLocalPRDs();\n  }, []);\n\n  // Load PRDs from Notion\n  const loadPRDs = async () => {\n    setLoading(true);\n    try {\n      const response = await notionAPI.getPages(PageType.prd, 100, 0);\n      const prdDocs = response.data.map(page => ({\n        id: page.id.toString(),\n        title: page.title,\n        content: page.content || '',\n        created_at: page.created_at,\n        updated_at: page.updated_at,\n        is_local: false,\n        notion_url: page.notion_url,\n        file_type: 'text'\n      }));\n      setPrdDocuments(prdDocs);\n    } catch (error) {\n      console.error('Failed to load PRDs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load local PRDs from localStorage\n  const loadLocalPRDs = () => {\n    const stored = localStorage.getItem('local-prds');\n    if (stored) {\n      const localPRDs = JSON.parse(stored);\n      setLocalPRDs(localPRDs);\n    }\n  };\n\n  // Save local PRDs to localStorage\n  const saveLocalPRDs = useCallback(prds => {\n    localStorage.setItem('local-prds', JSON.stringify(prds));\n    setLocalPRDs(prds);\n  }, []);\n\n  // Create new PRD\n  const createNewPRD = () => {\n    if (!newPRDTitle.trim()) return;\n    const newPRD = {\n      id: `local-${Date.now()}`,\n      title: newPRDTitle.trim(),\n      content: '# ' + newPRDTitle.trim() + '\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n',\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      is_local: true\n    };\n    const updatedLocalPRDs = [...localPRDs, newPRD];\n    saveLocalPRDs(updatedLocalPRDs);\n\n    // Convert to PRDDocument and select it\n    const prdDoc = {\n      ...newPRD,\n      file_type: 'markdown'\n    };\n    setSelectedPRD(prdDoc);\n    setEditorContent(newPRD.content);\n    setIsEditing(true);\n    setShowNewPRDModal(false);\n    setNewPRDTitle('');\n  };\n\n  // Select a PRD document\n  const selectPRD = async prd => {\n    setSelectedPRD(prd);\n    setIsEditing(prd.is_local);\n    if (prd.is_local) {\n      const localPRD = localPRDs.find(p => p.id === prd.id);\n      setEditorContent((localPRD === null || localPRD === void 0 ? void 0 : localPRD.content) || '');\n    } else {\n      // Load detailed content for Notion PRDs\n      try {\n        const response = await notionAPI.getPageDetails(parseInt(prd.id));\n        setEditorContent(response.data.content || '');\n      } catch (error) {\n        console.error('Failed to load PRD details:', error);\n        setEditorContent(prd.content || '');\n      }\n    }\n  };\n\n  // Save local PRD changes\n  const savePRDChanges = () => {\n    if (!(selectedPRD !== null && selectedPRD !== void 0 && selectedPRD.is_local)) return;\n    const updatedLocalPRDs = localPRDs.map(prd => prd.id === selectedPRD.id ? {\n      ...prd,\n      content: editorContent,\n      updated_at: new Date().toISOString()\n    } : prd);\n    saveLocalPRDs(updatedLocalPRDs);\n  };\n\n  // Get all PRDs (both local and Notion)\n  const allPRDs = [...localPRDs.map(prd => ({\n    ...prd,\n    file_type: 'markdown'\n  })), ...prdDocuments].sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"prd-review-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PRD Documents\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-prd-btn\",\n          onClick: () => setShowNewPRDModal(true),\n          children: \"+ New PRD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prd-list\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Loading PRDs...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }, this), allPRDs.map(prd => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prd-item ${(selectedPRD === null || selectedPRD === void 0 ? void 0 : selectedPRD.id) === prd.id ? 'selected' : ''}`,\n          onClick: () => selectPRD(prd),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prd-item-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: prd.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"prd-badges\",\n              children: [prd.is_local && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge local\",\n                children: \"Local\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 36\n              }, this), !prd.is_local && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"badge notion\",\n                children: \"Notion\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prd-item-meta\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: new Date(prd.updated_at).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, prd.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)), allPRDs.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No PRDs found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create a new PRD or import from Notion.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-editor\",\n      children: selectedPRD ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedPRD.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"editor-actions\",\n            children: [selectedPRD.is_local && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"save-btn\",\n                onClick: savePRDChanges,\n                disabled: !isEditing,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                onClick: () => setIsEditing(!isEditing),\n                children: isEditing ? 'Preview' : 'Edit'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), selectedPRD.notion_url && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: selectedPRD.notion_url,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              className: \"notion-link\",\n              children: \"Open in Notion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-content\",\n          children: isEditing && selectedPRD.is_local ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"markdown-editor\",\n            value: editorContent,\n            onChange: e => setEditorContent(e.target.value),\n            placeholder: \"Write your PRD content in Markdown...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"markdown-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: editorContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-selection\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select a PRD to view or edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Choose a PRD from the sidebar or create a new one to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prd-analysis\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"PRD Analysis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analysis-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Quick Overview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI-powered analysis will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Key Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"Feature analysis coming soon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"User Personas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Persona analysis will be shown here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Success Metrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Metrics analysis coming soon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"analysis-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Recommendations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"AI recommendations will appear here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), showNewPRDModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New PRD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowNewPRDModal(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"prd-title-input\",\n            placeholder: \"Enter PRD title...\",\n            value: newPRDTitle,\n            onChange: e => setNewPRDTitle(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && createNewPRD(),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cancel-btn\",\n            onClick: () => setShowNewPRDModal(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-btn\",\n            onClick: createNewPRD,\n            disabled: !newPRDTitle.trim(),\n            children: \"Create PRD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(PRDReviewPage, \"LHjCIGkohn6KGLzo+WTLNAl+3Qg=\");\n_c = PRDReviewPage;\nexport default PRDReviewPage;\nvar _c;\n$RefreshReg$(_c, \"PRDReviewPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","notionAPI","PageType","jsxDEV","_jsxDEV","Fragment","_Fragment","PRDReviewPage","_s","prdDocuments","setPrdDocuments","selectedPRD","setSelectedPRD","localPRDs","setLocalPRDs","loading","setLoading","editorContent","setEditorContent","isEditing","setIsEditing","showNewPRDModal","setShowNewPRDModal","newPRDTitle","setNewPRDTitle","loadPRDs","loadLocalPRDs","response","getPages","prd","prdDocs","data","map","page","id","toString","title","content","created_at","updated_at","is_local","notion_url","file_type","error","console","stored","localStorage","getItem","JSON","parse","saveLocalPRDs","prds","setItem","stringify","createNewPRD","trim","newPRD","Date","now","toISOString","updatedLocalPRDs","prdDoc","selectPRD","localPRD","find","p","getPageDetails","parseInt","savePRDChanges","allPRDs","sort","a","b","getTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleDateString","length","disabled","href","target","rel","value","onChange","e","placeholder","type","onKeyPress","key","autoFocus","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/PRDReviewPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { notionAPI } from '../services/api';\nimport { NotionPage, PRDDocument, LocalPRD, PageType } from '../types';\nimport './PRDReviewPage.css';\n\nconst PRDReviewPage: React.FC = () => {\n  // State management\n  const [prdDocuments, setPrdDocuments] = useState<PRDDocument[]>([]);\n  const [selectedPRD, setSelectedPRD] = useState<PRDDocument | null>(null);\n  const [localPRDs, setLocalPRDs] = useState<LocalPRD[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [editorContent, setEditorContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [showNewPRDModal, setShowNewPRDModal] = useState(false);\n  const [newPRDTitle, setNewPRDTitle] = useState('');\n\n  // Load PRDs on component mount\n  useEffect(() => {\n    loadPRDs();\n    loadLocalPRDs();\n  }, []);\n\n  // Load PRDs from Notion\n  const loadPRDs = async () => {\n    setLoading(true);\n    try {\n      const response = await notionAPI.getPages(PageType.prd, 100, 0);\n      const prdDocs: PRDDocument[] = response.data.map((page: NotionPage) => ({\n        id: page.id.toString(),\n        title: page.title,\n        content: page.content || '',\n        created_at: page.created_at,\n        updated_at: page.updated_at,\n        is_local: false,\n        notion_url: page.notion_url,\n        file_type: 'text' as const,\n      }));\n      setPrdDocuments(prdDocs);\n    } catch (error) {\n      console.error('Failed to load PRDs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load local PRDs from localStorage\n  const loadLocalPRDs = () => {\n    const stored = localStorage.getItem('local-prds');\n    if (stored) {\n      const localPRDs = JSON.parse(stored);\n      setLocalPRDs(localPRDs);\n    }\n  };\n\n  // Save local PRDs to localStorage\n  const saveLocalPRDs = useCallback((prds: LocalPRD[]) => {\n    localStorage.setItem('local-prds', JSON.stringify(prds));\n    setLocalPRDs(prds);\n  }, []);\n\n  // Create new PRD\n  const createNewPRD = () => {\n    if (!newPRDTitle.trim()) return;\n\n    const newPRD: LocalPRD = {\n      id: `local-${Date.now()}`,\n      title: newPRDTitle.trim(),\n      content: '# ' + newPRDTitle.trim() + '\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n',\n      created_at: new Date().toISOString(),\n      updated_at: new Date().toISOString(),\n      is_local: true,\n    };\n\n    const updatedLocalPRDs = [...localPRDs, newPRD];\n    saveLocalPRDs(updatedLocalPRDs);\n    \n    // Convert to PRDDocument and select it\n    const prdDoc: PRDDocument = {\n      ...newPRD,\n      file_type: 'markdown',\n    };\n    \n    setSelectedPRD(prdDoc);\n    setEditorContent(newPRD.content);\n    setIsEditing(true);\n    setShowNewPRDModal(false);\n    setNewPRDTitle('');\n  };\n\n  // Select a PRD document\n  const selectPRD = async (prd: PRDDocument) => {\n    setSelectedPRD(prd);\n    setIsEditing(prd.is_local);\n\n    if (prd.is_local) {\n      const localPRD = localPRDs.find(p => p.id === prd.id);\n      setEditorContent(localPRD?.content || '');\n    } else {\n      // Load detailed content for Notion PRDs\n      try {\n        const response = await notionAPI.getPageDetails(parseInt(prd.id));\n        setEditorContent(response.data.content || '');\n      } catch (error) {\n        console.error('Failed to load PRD details:', error);\n        setEditorContent(prd.content || '');\n      }\n    }\n  };\n\n  // Save local PRD changes\n  const savePRDChanges = () => {\n    if (!selectedPRD?.is_local) return;\n\n    const updatedLocalPRDs = localPRDs.map(prd => \n      prd.id === selectedPRD.id \n        ? { ...prd, content: editorContent, updated_at: new Date().toISOString() }\n        : prd\n    );\n    saveLocalPRDs(updatedLocalPRDs);\n  };\n\n  // Get all PRDs (both local and Notion)\n  const allPRDs = [\n    ...localPRDs.map(prd => ({ ...prd, file_type: 'markdown' as const })),\n    ...prdDocuments\n  ].sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime());\n\n  return (\n    <div className=\"prd-review-page\">\n      {/* Left Sidebar - PRD List */}\n      <div className=\"prd-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>PRD Documents</h3>\n          <button \n            className=\"new-prd-btn\"\n            onClick={() => setShowNewPRDModal(true)}\n          >\n            + New PRD\n          </button>\n        </div>\n\n        <div className=\"prd-list\">\n          {loading && <div className=\"loading\">Loading PRDs...</div>}\n          \n          {allPRDs.map((prd) => (\n            <div\n              key={prd.id}\n              className={`prd-item ${selectedPRD?.id === prd.id ? 'selected' : ''}`}\n              onClick={() => selectPRD(prd)}\n            >\n              <div className=\"prd-item-header\">\n                <h4>{prd.title}</h4>\n                <div className=\"prd-badges\">\n                  {prd.is_local && <span className=\"badge local\">Local</span>}\n                  {!prd.is_local && <span className=\"badge notion\">Notion</span>}\n                </div>\n              </div>\n              <div className=\"prd-item-meta\">\n                <span className=\"date\">\n                  {new Date(prd.updated_at).toLocaleDateString()}\n                </span>\n              </div>\n            </div>\n          ))}\n\n          {allPRDs.length === 0 && !loading && (\n            <div className=\"empty-state\">\n              <p>No PRDs found.</p>\n              <p>Create a new PRD or import from Notion.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Central Editor Area */}\n      <div className=\"prd-editor\">\n        {selectedPRD ? (\n          <>\n            <div className=\"editor-header\">\n              <h2>{selectedPRD.title}</h2>\n              <div className=\"editor-actions\">\n                {selectedPRD.is_local && (\n                  <>\n                    <button\n                      className=\"save-btn\"\n                      onClick={savePRDChanges}\n                      disabled={!isEditing}\n                    >\n                      Save\n                    </button>\n                    <button\n                      className=\"edit-btn\"\n                      onClick={() => setIsEditing(!isEditing)}\n                    >\n                      {isEditing ? 'Preview' : 'Edit'}\n                    </button>\n                  </>\n                )}\n                {selectedPRD.notion_url && (\n                  <a\n                    href={selectedPRD.notion_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"notion-link\"\n                  >\n                    Open in Notion\n                  </a>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-content\">\n              {isEditing && selectedPRD.is_local ? (\n                <textarea\n                  className=\"markdown-editor\"\n                  value={editorContent}\n                  onChange={(e) => setEditorContent(e.target.value)}\n                  placeholder=\"Write your PRD content in Markdown...\"\n                />\n              ) : (\n                <div className=\"markdown-preview\">\n                  <pre>{editorContent}</pre>\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <div className=\"no-selection\">\n            <h3>Select a PRD to view or edit</h3>\n            <p>Choose a PRD from the sidebar or create a new one to get started.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Right Sidebar - Analysis */}\n      <div className=\"prd-analysis\">\n        <div className=\"analysis-header\">\n          <h3>PRD Analysis</h3>\n        </div>\n        <div className=\"analysis-content\">\n          <div className=\"analysis-section\">\n            <h4>Quick Overview</h4>\n            <p>AI-powered analysis will appear here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Key Features</h4>\n            <ul>\n              <li>Feature analysis coming soon</li>\n            </ul>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>User Personas</h4>\n            <p>Persona analysis will be shown here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Success Metrics</h4>\n            <p>Metrics analysis coming soon</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Recommendations</h4>\n            <p>AI recommendations will appear here</p>\n          </div>\n        </div>\n      </div>\n\n      {/* New PRD Modal */}\n      {showNewPRDModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Create New PRD</h3>\n              <button\n                className=\"close-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-content\">\n              <input\n                type=\"text\"\n                className=\"prd-title-input\"\n                placeholder=\"Enter PRD title...\"\n                value={newPRDTitle}\n                onChange={(e) => setNewPRDTitle(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && createNewPRD()}\n                autoFocus\n              />\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                className=\"cancel-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"create-btn\"\n                onClick={createNewPRD}\n                disabled={!newPRDTitle.trim()}\n              >\n                Create PRD\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PRDReviewPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}