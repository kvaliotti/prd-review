{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{api}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export const useAuth=()=>{const context=useContext(AuthContext);if(context===undefined){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const token=localStorage.getItem('token');if(token){api.defaults.headers.common['Authorization']=`Bearer ${token}`;fetchUser();}else{setLoading(false);}},[]);const fetchUser=async()=>{try{const response=await api.get('/auth/me');setUser(response.data);}catch(error){localStorage.removeItem('token');localStorage.removeItem('refreshToken');delete api.defaults.headers.common['Authorization'];}finally{setLoading(false);}};const login=async(email,password)=>{const response=await api.post('/auth/login',{email,password});const{access_token,refresh_token}=response.data;localStorage.setItem('token',access_token);localStorage.setItem('refreshToken',refresh_token);api.defaults.headers.common['Authorization']=`Bearer ${access_token}`;await fetchUser();};const register=async(email,password)=>{const response=await api.post('/auth/register',{email,password});const{access_token,refresh_token}=response.data;localStorage.setItem('token',access_token);localStorage.setItem('refreshToken',refresh_token);api.defaults.headers.common['Authorization']=`Bearer ${access_token}`;await fetchUser();};const logout=()=>{localStorage.removeItem('token');localStorage.removeItem('refreshToken');delete api.defaults.headers.common['Authorization'];setUser(null);};const value={user,loading,login,register,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","localStorage","getItem","defaults","headers","common","fetchUser","response","get","data","error","removeItem","login","email","password","post","access_token","refresh_token","setItem","register","logout","value","Provider"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { User, AuthResponse } from '../types';\nimport { api } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (email: string, password: string) => Promise<void>;\n  register: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      fetchUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const fetchUser = async () => {\n    try {\n      const response = await api.get('/auth/me');\n      setUser(response.data);\n    } catch (error) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email: string, password: string) => {\n    const response = await api.post<AuthResponse>('/auth/login', {\n      email,\n      password,\n    });\n\n    const { access_token, refresh_token } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n    await fetchUser();\n  };\n\n  const register = async (email: string, password: string) => {\n    const response = await api.post<AuthResponse>('/auth/register', {\n      email,\n      password,\n    });\n\n    const { access_token, refresh_token } = response.data;\n    localStorage.setItem('token', access_token);\n    localStorage.setItem('refreshToken', refresh_token);\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n\n    await fetchUser();\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}