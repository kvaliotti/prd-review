{"ast":null,"code":"var _jsxFileName = \"/Users/konstantinvaliotti/prdreview/frontend/src/components/FileUpload.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onUploadComplete\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [pageTypes, setPageTypes] = useState({});\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/markdown': ['.md']\n    }\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n    setUploading(true);\n    const newUploadProgress = {};\n    for (const file of files) {\n      newUploadProgress[file.name] = 0;\n    }\n    setUploadProgress(newUploadProgress);\n    for (const file of files) {\n      try {\n        await notionAPI.uploadFile(file, pageTypes[file.name] || PageType.RESEARCH,\n        // Default to research\n        progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / (progressEvent.total || 1));\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: percentCompleted\n          }));\n        });\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: -1\n        })); // Indicate error\n      }\n    }\n    setUploading(false);\n    setFiles([]);\n    onUploadComplete();\n  };\n  const handleRemoveFile = fileName => {\n    setFiles(files.filter(file => file.name !== fileName));\n  };\n  const handlePageTypeChange = (fileName, type) => {\n    setPageTypes(prev => ({\n      ...prev,\n      [fileName]: type\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Upload Knowledge Base Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `dropzone ${isDragActive ? 'active' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files (PDF, .md)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Files to Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, \" - \", file.size, \" bytes\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: pageTypes[file.name] || PageType.RESEARCH,\n            onChange: e => handlePageTypeChange(file.name, e.target.value),\n            children: Object.values(PageType).map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: type,\n              children: type\n            }, type, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFile(file.name),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${uploadProgress[file.name] || 0}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, file.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: files.length === 0 || uploading,\n      children: uploading ? 'Uploading...' : 'Upload Files'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"6OpKBr4FmWAnHlwka6I8zRvX4WI=\", false, function () {\n  return [useDropzone];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useCallback","useDropzone","notionAPI","PageType","jsxDEV","_jsxDEV","FileUpload","onUploadComplete","_s","files","setFiles","uploading","setUploading","uploadProgress","setUploadProgress","pageTypes","setPageTypes","onDrop","acceptedFiles","prevFiles","getRootProps","getInputProps","isDragActive","accept","handleUpload","length","newUploadProgress","file","name","uploadFile","RESEARCH","progressEvent","percentCompleted","Math","round","loaded","total","prev","error","console","handleRemoveFile","fileName","filter","handlePageTypeChange","type","className","children","_jsxFileName","lineNumber","columnNumber","map","size","value","onChange","e","target","Object","values","onClick","style","width","disabled","_c","$RefreshReg$"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/FileUpload.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { notionAPI } from '../services/api';\nimport { PageType } from '../types';\n\ninterface FileUploadProps {\n  onUploadComplete: () => void;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onUploadComplete }) => {\n  const [files, setFiles] = useState<File[]>([]);\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState<Record<string, number>>({});\n  const [pageTypes, setPageTypes] = useState<Record<string, PageType>>({});\n\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    setFiles(prevFiles => [...prevFiles, ...acceptedFiles]);\n  }, []);\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'text/markdown': ['.md'],\n    },\n  });\n\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n\n    setUploading(true);\n    const newUploadProgress: Record<string, number> = {};\n    \n    for (const file of files) {\n      newUploadProgress[file.name] = 0;\n    }\n    setUploadProgress(newUploadProgress);\n\n    for (const file of files) {\n      try {\n        await notionAPI.uploadFile(\n          file, \n          pageTypes[file.name] || PageType.RESEARCH, // Default to research\n          (progressEvent) => {\n            const percentCompleted = Math.round(\n              (progressEvent.loaded * 100) / (progressEvent.total || 1)\n            );\n            setUploadProgress(prev => ({ ...prev, [file.name]: percentCompleted }));\n          }\n        );\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setUploadProgress(prev => ({ ...prev, [file.name]: -1 })); // Indicate error\n      }\n    }\n\n    setUploading(false);\n    setFiles([]);\n    onUploadComplete();\n  };\n  \n  const handleRemoveFile = (fileName: string) => {\n    setFiles(files.filter(file => file.name !== fileName));\n  };\n  \n  const handlePageTypeChange = (fileName: string, type: PageType) => {\n    setPageTypes(prev => ({...prev, [fileName]: type}));\n  }\n\n  return (\n    <div className=\"file-upload-container\">\n      <h3>Upload Knowledge Base Files</h3>\n      <div {...getRootProps()} className={`dropzone ${isDragActive ? 'active' : ''}`}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop some files here, or click to select files (PDF, .md)</p>\n      </div>\n      <aside>\n        <h4>Files to Upload</h4>\n        <ul>\n          {files.map(file => (\n            <li key={file.name}>\n              {file.name} - {file.size} bytes\n              <select \n                value={pageTypes[file.name] || PageType.RESEARCH} \n                onChange={(e) => handlePageTypeChange(file.name, e.target.value as PageType)}\n              >\n                {Object.values(PageType).map(type => (\n                  <option key={type} value={type}>{type}</option>\n                ))}\n              </select>\n              <button onClick={() => handleRemoveFile(file.name)}>Remove</button>\n              {uploading && (\n                <div className=\"progress-bar\">\n                  <div \n                    className=\"progress\" \n                    style={{ width: `${uploadProgress[file.name] || 0}%` }}\n                  ></div>\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      </aside>\n      <button onClick={handleUpload} disabled={files.length === 0 || uploading}>\n        {uploading ? 'Uploading...' : 'Upload Files'}\n      </button>\n    </div>\n  );\n};\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}