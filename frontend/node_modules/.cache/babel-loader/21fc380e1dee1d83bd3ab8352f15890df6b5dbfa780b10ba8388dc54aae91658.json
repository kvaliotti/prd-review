{"ast":null,"code":"export let PageType = /*#__PURE__*/function (PageType) {\n  PageType[\"PRD\"] = \"PRD\";\n  PageType[\"RESEARCH\"] = \"RESEARCH\";\n  PageType[\"ANALYTICS\"] = \"ANALYTICS\";\n  return PageType;\n}({});","map":{"version":3,"names":["PageType"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/types.ts"],"sourcesContent":["export interface User {\n  id: number;\n  email: string;\n  created_at: string;\n}\n\nexport interface Chat {\n  id: number;\n  user_id: number;\n  title: string;\n  created_at: string;\n  updated_at: string;\n  message_count: number;\n}\n\nexport interface Message {\n  id: number;\n  chat_id: number;\n  role: 'user' | 'assistant';\n  content: string;\n  created_at: string;\n}\n\nexport interface AuthResponse {\n  access_token: string;\n  refresh_token: string;\n  token_type: string;\n}\n\nexport interface LoginData {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData {\n  email: string;\n  password: string;\n}\n\nexport enum PageType {\n  PRD = \"PRD\",\n  RESEARCH = \"RESEARCH\",\n  ANALYTICS = \"ANALYTICS\",\n}\n\nexport interface NotionSettings {\n  id: number;\n  user_id: number;\n  notion_token: string | null;\n  prd_database_id: string | null;\n  research_database_id: string | null;\n  analytics_database_id: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface NotionSettingsUpdate {\n  notion_token?: string;\n  prd_database_id?: string;\n  research_database_id?: string;\n  analytics_database_id?: string;\n  import_prd?: boolean;\n  import_research?: boolean;\n  import_analytics?: boolean;\n}\n\nexport interface NotionPage {\n  id: number;\n  notion_page_id: string;\n  user_id: number;\n  title: string;\n  content: string | null;\n  page_type: PageType;\n  notion_url: string | null;\n  parent_page_id: string | null;\n  last_edited_time: string | null;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface NotionChunk {\n  id: number;\n  page_id: number;\n  chunk_index: number;\n  content: string;\n  token_count: number | null;\n  created_at: string;\n}\n\nexport interface NotionComment {\n  id: number;\n  page_id: number;\n  notion_comment_id: string;\n  content: string;\n  author: string | null;\n  created_time: string | null;\n  created_at: string;\n}\n\nexport interface NotionPageWithDetails extends NotionPage {\n  chunks: NotionChunk[];\n  comments: NotionComment[];\n}\n\nexport interface ImportStatusResponse {\n  has_data: boolean;\n  total_pages: number;\n  by_type: {\n    [key: string]: any;\n  };\n  last_import: string | null;\n}\n\nexport interface KnowledgeBaseStats {\n  total_pages: number;\n  by_type: { [key: string]: number };\n  total_chunks: number;\n  total_comments: number;\n}\n\nexport interface PageSearchResponse {\n  pages: NotionPage[];\n  total_found: number;\n}\n\nexport interface TestConnectionResponse {\n  connected: boolean;\n  message: string;\n} "],"mappings":"AAuCA,WAAYA,QAAQ,0BAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAARA,QAAQ;EAAA,OAARA,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}