{"ast":null,"code":"import React,{useState,useEffect}from'react';import{notionAPI,prdAPI}from'../services/api';import{PageType}from'../types';import'./PRDReviewPage.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PRDReviewPage=()=>{// State management\nconst[notionPRDs,setNotionPRDs]=useState([]);const[userPRDs,setUserPRDs]=useState([]);const[selectedPRD,setSelectedPRD]=useState(null);const[loading,setLoading]=useState(false);const[saving,setSaving]=useState(false);const[editorContent,setEditorContent]=useState('');const[isEditing,setIsEditing]=useState(false);const[showNewPRDModal,setShowNewPRDModal]=useState(false);const[newPRDTitle,setNewPRDTitle]=useState('');// Load PRDs on component mount\nuseEffect(()=>{loadAllPRDs();},[]);// eslint-disable-line react-hooks/exhaustive-deps\n// Load all PRDs (both Notion and user-created)\nconst loadAllPRDs=async()=>{setLoading(true);try{await Promise.all([loadNotionPRDs(),loadUserPRDs()]);}catch(error){console.error('Failed to load PRDs:',error);}finally{setLoading(false);}};// Load PRDs from Notion\nconst loadNotionPRDs=async()=>{try{const response=await notionAPI.getPages(PageType.prd,100,0);const prdDocs=response.data.map(page=>({id:`notion-${page.id}`,title:page.title,content:page.content||'',created_at:page.created_at,updated_at:page.updated_at,is_local:false,notion_url:page.notion_url,file_type:'text'}));setNotionPRDs(prdDocs);}catch(error){console.error('Failed to load Notion PRDs:',error);}};// Load user-created PRDs from database\nconst loadUserPRDs=async()=>{try{const response=await prdAPI.getPRDs();const prdDocs=response.data.map(prd=>({id:`user-${prd.id}`,title:prd.title,content:prd.content||'',created_at:prd.created_at,updated_at:prd.updated_at,is_local:true,file_type:'markdown'}));setUserPRDs(prdDocs);}catch(error){console.error('Failed to load user PRDs:',error);}};// Create new PRD in database\nconst createNewPRD=async()=>{if(!newPRDTitle.trim())return;setSaving(true);try{const prdData={title:newPRDTitle.trim(),content:`# ${newPRDTitle.trim()}\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n`};const response=await prdAPI.createPRD(prdData);// Convert to PRDDocument format\nconst newPRD={id:`user-${response.data.id}`,title:response.data.title,content:response.data.content||'',created_at:response.data.created_at,updated_at:response.data.updated_at,is_local:true,file_type:'markdown'};// Add to user PRDs and select it\nsetUserPRDs(prev=>[newPRD,...prev]);setSelectedPRD(newPRD);setEditorContent(newPRD.content||'');setIsEditing(true);setShowNewPRDModal(false);setNewPRDTitle('');}catch(error){console.error('Failed to create PRD:',error);alert('Failed to create PRD. Please try again.');}finally{setSaving(false);}};// Select a PRD document\nconst selectPRD=async prd=>{setSelectedPRD(prd);setIsEditing(prd.is_local);if(prd.is_local){// For user-created PRDs, content is already available\nsetEditorContent(prd.content||'');}else{// Load detailed content for Notion PRDs\ntry{const notionId=parseInt(prd.id.replace('notion-',''));const response=await notionAPI.getPageDetails(notionId);setEditorContent(response.data.content||'');}catch(error){console.error('Failed to load PRD details:',error);setEditorContent(prd.content||'');}}};// Save PRD changes to database\nconst savePRDChanges=async()=>{if(!(selectedPRD!==null&&selectedPRD!==void 0&&selectedPRD.is_local))return;setSaving(true);try{const prdId=parseInt(selectedPRD.id.replace('user-',''));const updateData={content:editorContent};const response=await prdAPI.updatePRD(prdId,updateData);// Update the PRD in state\nconst updatedPRD={...selectedPRD,content:response.data.content||'',updated_at:response.data.updated_at};setSelectedPRD(updatedPRD);setUserPRDs(prev=>prev.map(prd=>prd.id===selectedPRD.id?updatedPRD:prd));alert('PRD saved successfully!');}catch(error){console.error('Failed to save PRD:',error);alert('Failed to save PRD. Please try again.');}finally{setSaving(false);}};// Delete a PRD\nconst deletePRD=async prd=>{if(!prd.is_local)return;if(!window.confirm(`Are you sure you want to delete \"${prd.title}\"?`))return;try{const prdId=parseInt(prd.id.replace('user-',''));await prdAPI.deletePRD(prdId);// Remove from state\nsetUserPRDs(prev=>prev.filter(p=>p.id!==prd.id));// Clear selection if this PRD was selected\nif((selectedPRD===null||selectedPRD===void 0?void 0:selectedPRD.id)===prd.id){setSelectedPRD(null);setEditorContent('');setIsEditing(false);}alert('PRD deleted successfully!');}catch(error){console.error('Failed to delete PRD:',error);alert('Failed to delete PRD. Please try again.');}};// Get all PRDs sorted by update time\nconst allPRDs=[...userPRDs,...notionPRDs].sort((a,b)=>new Date(b.updated_at).getTime()-new Date(a.updated_at).getTime());return/*#__PURE__*/_jsxs(\"div\",{className:\"prd-review-page\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"prd-sidebar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"PRD Documents\"}),/*#__PURE__*/_jsx(\"button\",{className:\"new-prd-btn\",onClick:()=>setShowNewPRDModal(true),disabled:saving,children:\"+ New PRD\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"prd-list\",children:[loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Loading PRDs...\"}),allPRDs.map(prd=>/*#__PURE__*/_jsxs(\"div\",{className:`prd-item ${(selectedPRD===null||selectedPRD===void 0?void 0:selectedPRD.id)===prd.id?'selected':''}`,onClick:()=>selectPRD(prd),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"prd-item-header\",children:[/*#__PURE__*/_jsx(\"h4\",{children:prd.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"prd-badges\",children:[prd.is_local&&/*#__PURE__*/_jsx(\"span\",{className:\"badge local\",children:\"Local\"}),!prd.is_local&&/*#__PURE__*/_jsx(\"span\",{className:\"badge notion\",children:\"Notion\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"prd-item-meta\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"date\",children:new Date(prd.updated_at).toLocaleDateString()}),prd.is_local&&/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:e=>{e.stopPropagation();deletePRD(prd);},title:\"Delete PRD\",children:\"\\uD83D\\uDDD1\\uFE0F\"})]})]},prd.id)),allPRDs.length===0&&!loading&&/*#__PURE__*/_jsxs(\"div\",{className:\"empty-state\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No PRDs found.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Create a new PRD or import from Notion.\"})]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"prd-editor\",children:selectedPRD?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"editor-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:selectedPRD.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"editor-actions\",children:[selectedPRD.is_local&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"save-btn\",onClick:savePRDChanges,disabled:!isEditing||saving,children:saving?'Saving...':'Save'}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:()=>setIsEditing(!isEditing),disabled:saving,children:isEditing?'Preview':'Edit'})]}),selectedPRD.notion_url&&/*#__PURE__*/_jsx(\"a\",{href:selectedPRD.notion_url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"notion-link\",children:\"Open in Notion\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"editor-content\",children:isEditing&&selectedPRD.is_local?/*#__PURE__*/_jsx(\"textarea\",{className:\"markdown-editor\",value:editorContent,onChange:e=>setEditorContent(e.target.value),placeholder:\"Write your PRD content in Markdown...\",disabled:saving}):/*#__PURE__*/_jsx(\"div\",{className:\"markdown-preview\",children:/*#__PURE__*/_jsx(\"pre\",{children:editorContent})})})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-selection\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Select a PRD to view or edit\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Choose a PRD from the sidebar or create a new one to get started.\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"prd-analysis\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"analysis-header\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"PRD Analysis\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Quick Overview\"}),/*#__PURE__*/_jsx(\"p\",{children:\"AI-powered analysis will appear here\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Key Features\"}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{children:\"Feature analysis coming soon\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"User Personas\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Persona analysis will be shown here\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Success Metrics\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Metrics analysis coming soon\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Recommendations\"}),/*#__PURE__*/_jsx(\"p\",{children:\"AI recommendations will appear here\"})]})]})]}),showNewPRDModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Create New PRD\"}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>setShowNewPRDModal(false),disabled:saving,children:\"\\xD7\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-content\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"prd-title-input\",placeholder:\"Enter PRD title...\",value:newPRDTitle,onChange:e=>setNewPRDTitle(e.target.value),onKeyPress:e=>e.key==='Enter'&&!saving&&createNewPRD(),autoFocus:true,disabled:saving})}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"cancel-btn\",onClick:()=>setShowNewPRDModal(false),disabled:saving,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:\"create-btn\",onClick:createNewPRD,disabled:!newPRDTitle.trim()||saving,children:saving?'Creating...':'Create PRD'})]})]})})]});};export default PRDReviewPage;","map":{"version":3,"names":["React","useState","useEffect","notionAPI","prdAPI","PageType","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PRDReviewPage","notionPRDs","setNotionPRDs","userPRDs","setUserPRDs","selectedPRD","setSelectedPRD","loading","setLoading","saving","setSaving","editorContent","setEditorContent","isEditing","setIsEditing","showNewPRDModal","setShowNewPRDModal","newPRDTitle","setNewPRDTitle","loadAllPRDs","Promise","all","loadNotionPRDs","loadUserPRDs","error","console","response","getPages","prd","prdDocs","data","map","page","id","title","content","created_at","updated_at","is_local","notion_url","file_type","getPRDs","createNewPRD","trim","prdData","createPRD","newPRD","prev","alert","selectPRD","notionId","parseInt","replace","getPageDetails","savePRDChanges","prdId","updateData","updatePRD","updatedPRD","deletePRD","window","confirm","filter","p","allPRDs","sort","a","b","Date","getTime","className","children","onClick","disabled","toLocaleDateString","e","stopPropagation","length","href","target","rel","value","onChange","placeholder","type","onKeyPress","key","autoFocus"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/PRDReviewPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notionAPI, prdAPI, PRDCreate, PRDUpdate, PRDResponse } from '../services/api';\nimport { NotionPage, PRDDocument, PageType } from '../types';\nimport './PRDReviewPage.css';\n\nconst PRDReviewPage: React.FC = () => {\n  // State management\n  const [notionPRDs, setNotionPRDs] = useState<PRDDocument[]>([]);\n  const [userPRDs, setUserPRDs] = useState<PRDDocument[]>([]);\n  const [selectedPRD, setSelectedPRD] = useState<PRDDocument | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [saving, setSaving] = useState(false);\n  const [editorContent, setEditorContent] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [showNewPRDModal, setShowNewPRDModal] = useState(false);\n  const [newPRDTitle, setNewPRDTitle] = useState('');\n\n  // Load PRDs on component mount\n  useEffect(() => {\n    loadAllPRDs();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // Load all PRDs (both Notion and user-created)\n  const loadAllPRDs = async () => {\n    setLoading(true);\n    try {\n      await Promise.all([loadNotionPRDs(), loadUserPRDs()]);\n    } catch (error) {\n      console.error('Failed to load PRDs:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Load PRDs from Notion\n  const loadNotionPRDs = async () => {\n    try {\n      const response = await notionAPI.getPages(PageType.prd, 100, 0);\n      const prdDocs: PRDDocument[] = response.data.map((page: NotionPage) => ({\n        id: `notion-${page.id}`,\n        title: page.title,\n        content: page.content || '',\n        created_at: page.created_at,\n        updated_at: page.updated_at,\n        is_local: false,\n        notion_url: page.notion_url,\n        file_type: 'text' as const,\n      }));\n      setNotionPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load Notion PRDs:', error);\n    }\n  };\n\n  // Load user-created PRDs from database\n  const loadUserPRDs = async () => {\n    try {\n      const response = await prdAPI.getPRDs();\n      const prdDocs: PRDDocument[] = response.data.map((prd: PRDResponse) => ({\n        id: `user-${prd.id}`,\n        title: prd.title,\n        content: prd.content || '',\n        created_at: prd.created_at,\n        updated_at: prd.updated_at,\n        is_local: true,\n        file_type: 'markdown' as const,\n      }));\n      setUserPRDs(prdDocs);\n    } catch (error) {\n      console.error('Failed to load user PRDs:', error);\n    }\n  };\n\n  // Create new PRD in database\n  const createNewPRD = async () => {\n    if (!newPRDTitle.trim()) return;\n\n    setSaving(true);\n    try {\n      const prdData: PRDCreate = {\n        title: newPRDTitle.trim(),\n        content: `# ${newPRDTitle.trim()}\\n\\n## Overview\\n\\nWrite your PRD content here...\\n\\n## Features\\n\\n## User Stories\\n\\n## Success Metrics\\n\\n`,\n      };\n\n      const response = await prdAPI.createPRD(prdData);\n      \n      // Convert to PRDDocument format\n      const newPRD: PRDDocument = {\n        id: `user-${response.data.id}`,\n        title: response.data.title,\n        content: response.data.content || '',\n        created_at: response.data.created_at,\n        updated_at: response.data.updated_at,\n        is_local: true,\n        file_type: 'markdown',\n      };\n\n      // Add to user PRDs and select it\n      setUserPRDs(prev => [newPRD, ...prev]);\n      setSelectedPRD(newPRD);\n      setEditorContent(newPRD.content || '');\n      setIsEditing(true);\n      setShowNewPRDModal(false);\n      setNewPRDTitle('');\n    } catch (error) {\n      console.error('Failed to create PRD:', error);\n      alert('Failed to create PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Select a PRD document\n  const selectPRD = async (prd: PRDDocument) => {\n    setSelectedPRD(prd);\n    setIsEditing(prd.is_local);\n\n    if (prd.is_local) {\n      // For user-created PRDs, content is already available\n      setEditorContent(prd.content || '');\n    } else {\n      // Load detailed content for Notion PRDs\n      try {\n        const notionId = parseInt(prd.id.replace('notion-', ''));\n        const response = await notionAPI.getPageDetails(notionId);\n        setEditorContent(response.data.content || '');\n      } catch (error) {\n        console.error('Failed to load PRD details:', error);\n        setEditorContent(prd.content || '');\n      }\n    }\n  };\n\n  // Save PRD changes to database\n  const savePRDChanges = async () => {\n    if (!selectedPRD?.is_local) return;\n\n    setSaving(true);\n    try {\n      const prdId = parseInt(selectedPRD.id.replace('user-', ''));\n      const updateData: PRDUpdate = {\n        content: editorContent,\n      };\n\n      const response = await prdAPI.updatePRD(prdId, updateData);\n      \n      // Update the PRD in state\n      const updatedPRD: PRDDocument = {\n        ...selectedPRD,\n        content: response.data.content || '',\n        updated_at: response.data.updated_at,\n      };\n\n      setSelectedPRD(updatedPRD);\n      setUserPRDs(prev => \n        prev.map(prd => \n          prd.id === selectedPRD.id ? updatedPRD : prd\n        )\n      );\n\n      alert('PRD saved successfully!');\n    } catch (error) {\n      console.error('Failed to save PRD:', error);\n      alert('Failed to save PRD. Please try again.');\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  // Delete a PRD\n  const deletePRD = async (prd: PRDDocument) => {\n    if (!prd.is_local) return;\n    \n    if (!window.confirm(`Are you sure you want to delete \"${prd.title}\"?`)) return;\n\n    try {\n      const prdId = parseInt(prd.id.replace('user-', ''));\n      await prdAPI.deletePRD(prdId);\n      \n      // Remove from state\n      setUserPRDs(prev => prev.filter(p => p.id !== prd.id));\n      \n      // Clear selection if this PRD was selected\n      if (selectedPRD?.id === prd.id) {\n        setSelectedPRD(null);\n        setEditorContent('');\n        setIsEditing(false);\n      }\n      \n      alert('PRD deleted successfully!');\n    } catch (error) {\n      console.error('Failed to delete PRD:', error);\n      alert('Failed to delete PRD. Please try again.');\n    }\n  };\n\n  // Get all PRDs sorted by update time\n  const allPRDs = [...userPRDs, ...notionPRDs].sort(\n    (a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime()\n  );\n\n  return (\n    <div className=\"prd-review-page\">\n      {/* Left Sidebar - PRD List */}\n      <div className=\"prd-sidebar\">\n        <div className=\"sidebar-header\">\n          <h3>PRD Documents</h3>\n          <button \n            className=\"new-prd-btn\"\n            onClick={() => setShowNewPRDModal(true)}\n            disabled={saving}\n          >\n            + New PRD\n          </button>\n        </div>\n\n        <div className=\"prd-list\">\n          {loading && <div className=\"loading\">Loading PRDs...</div>}\n          \n          {allPRDs.map((prd) => (\n            <div\n              key={prd.id}\n              className={`prd-item ${selectedPRD?.id === prd.id ? 'selected' : ''}`}\n              onClick={() => selectPRD(prd)}\n            >\n              <div className=\"prd-item-header\">\n                <h4>{prd.title}</h4>\n                <div className=\"prd-badges\">\n                  {prd.is_local && <span className=\"badge local\">Local</span>}\n                  {!prd.is_local && <span className=\"badge notion\">Notion</span>}\n                </div>\n              </div>\n              <div className=\"prd-item-meta\">\n                <span className=\"date\">\n                  {new Date(prd.updated_at).toLocaleDateString()}\n                </span>\n                {prd.is_local && (\n                  <button\n                    className=\"delete-btn\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      deletePRD(prd);\n                    }}\n                    title=\"Delete PRD\"\n                  >\n                    🗑️\n                  </button>\n                )}\n              </div>\n            </div>\n          ))}\n\n          {allPRDs.length === 0 && !loading && (\n            <div className=\"empty-state\">\n              <p>No PRDs found.</p>\n              <p>Create a new PRD or import from Notion.</p>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Central Editor Area */}\n      <div className=\"prd-editor\">\n        {selectedPRD ? (\n          <>\n            <div className=\"editor-header\">\n              <h2>{selectedPRD.title}</h2>\n              <div className=\"editor-actions\">\n                {selectedPRD.is_local && (\n                  <>\n                    <button\n                      className=\"save-btn\"\n                      onClick={savePRDChanges}\n                      disabled={!isEditing || saving}\n                    >\n                      {saving ? 'Saving...' : 'Save'}\n                    </button>\n                    <button\n                      className=\"edit-btn\"\n                      onClick={() => setIsEditing(!isEditing)}\n                      disabled={saving}\n                    >\n                      {isEditing ? 'Preview' : 'Edit'}\n                    </button>\n                  </>\n                )}\n                {selectedPRD.notion_url && (\n                  <a\n                    href={selectedPRD.notion_url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"notion-link\"\n                  >\n                    Open in Notion\n                  </a>\n                )}\n              </div>\n            </div>\n\n            <div className=\"editor-content\">\n              {isEditing && selectedPRD.is_local ? (\n                <textarea\n                  className=\"markdown-editor\"\n                  value={editorContent}\n                  onChange={(e) => setEditorContent(e.target.value)}\n                  placeholder=\"Write your PRD content in Markdown...\"\n                  disabled={saving}\n                />\n              ) : (\n                <div className=\"markdown-preview\">\n                  <pre>{editorContent}</pre>\n                </div>\n              )}\n            </div>\n          </>\n        ) : (\n          <div className=\"no-selection\">\n            <h3>Select a PRD to view or edit</h3>\n            <p>Choose a PRD from the sidebar or create a new one to get started.</p>\n          </div>\n        )}\n      </div>\n\n      {/* Right Sidebar - Analysis */}\n      <div className=\"prd-analysis\">\n        <div className=\"analysis-header\">\n          <h3>PRD Analysis</h3>\n        </div>\n        <div className=\"analysis-content\">\n          <div className=\"analysis-section\">\n            <h4>Quick Overview</h4>\n            <p>AI-powered analysis will appear here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Key Features</h4>\n            <ul>\n              <li>Feature analysis coming soon</li>\n            </ul>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>User Personas</h4>\n            <p>Persona analysis will be shown here</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Success Metrics</h4>\n            <p>Metrics analysis coming soon</p>\n          </div>\n          \n          <div className=\"analysis-section\">\n            <h4>Recommendations</h4>\n            <p>AI recommendations will appear here</p>\n          </div>\n        </div>\n      </div>\n\n      {/* New PRD Modal */}\n      {showNewPRDModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal\">\n            <div className=\"modal-header\">\n              <h3>Create New PRD</h3>\n              <button\n                className=\"close-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n                disabled={saving}\n              >\n                ×\n              </button>\n            </div>\n            <div className=\"modal-content\">\n              <input\n                type=\"text\"\n                className=\"prd-title-input\"\n                placeholder=\"Enter PRD title...\"\n                value={newPRDTitle}\n                onChange={(e) => setNewPRDTitle(e.target.value)}\n                onKeyPress={(e) => e.key === 'Enter' && !saving && createNewPRD()}\n                autoFocus\n                disabled={saving}\n              />\n            </div>\n            <div className=\"modal-actions\">\n              <button\n                className=\"cancel-btn\"\n                onClick={() => setShowNewPRDModal(false)}\n                disabled={saving}\n              >\n                Cancel\n              </button>\n              <button\n                className=\"create-btn\"\n                onClick={createNewPRD}\n                disabled={!newPRDTitle.trim() || saving}\n              >\n                {saving ? 'Creating...' : 'Create PRD'}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PRDReviewPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}