{"ast":null,"code":"import React,{useState,useEffect}from'react';import{notionAPI}from'../services/api';import'./SettingsPage.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SettingsPage=()=>{const[settings,setSettings]=useState({});const[isLoading,setIsLoading]=useState(true);const[isSaving,setIsSaving]=useState(false);const[isTesting,setIsTesting]=useState(false);const[message,setMessage]=useState(null);useEffect(()=>{const fetchSettings=async()=>{try{const response=await notionAPI.getSettings();if(response.data){setSettings({notion_token:response.data.notion_token||'',prd_database_id:response.data.prd_database_id||'',research_database_id:response.data.research_database_id||'',analytics_database_id:response.data.analytics_database_id||'',import_prd:response.data.import_prd||false,import_research:response.data.import_research||false,import_analytics:response.data.import_analytics||false});}}catch(error){console.error('Error fetching settings:',error);setMessage({type:'error',text:'Failed to load settings.'});}finally{setIsLoading(false);}};fetchSettings();},[]);const handleInputChange=e=>{const{name,value,type,checked}=e.target;setSettings(prev=>({...prev,[name]:type==='checkbox'?checked:value}));};const handleTestConnection=async()=>{if(!settings.notion_token){setMessage({type:'error',text:'Notion token is required to test the connection.'});return;}setIsTesting(true);setMessage(null);try{// Pass the whole settings object, let the backend handle it\nconst response=await notionAPI.testConnection(settings);if(response.data.connected){setMessage({type:'success',text:'Connection successful!'});}else{setMessage({type:'error',text:`Connection failed: ${response.data.message}`});}}catch(error){console.error('Error testing connection:',error);setMessage({type:'error',text:'An error occurred while testing the connection.'});}finally{setIsTesting(false);}};const handleSaveChanges=async()=>{setIsSaving(true);setMessage(null);try{await notionAPI.updateSettings(settings);setMessage({type:'success',text:'Settings saved successfully!'});}catch(error){console.error('Error saving settings:',error);setMessage({type:'error',text:'Failed to save settings.'});}finally{setIsSaving(false);}};if(isLoading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading settings...\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"settings-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"settings-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Settings\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Configure your Notion integration and manage your knowledge base imports\"})]}),message&&/*#__PURE__*/_jsx(\"div\",{className:`message ${message.type}`,children:message.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"settings-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-icon\",children:\"\\uD83D\\uDD17\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Notion API Connection\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-description\",children:\"Connect your Notion workspace to import documents\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"notion_token\",children:\"Notion API Token\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"notion_token\",name:\"notion_token\",value:settings.notion_token||'',onChange:handleInputChange,placeholder:\"Enter your Notion API token (secret_...)\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:handleTestConnection,disabled:isTesting,children:isTesting?'Testing...':'Test Connection'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"card-icon\",children:\"\\uD83D\\uDCCA\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:\"Database Configuration\"}),/*#__PURE__*/_jsx(\"p\",{className:\"card-description\",children:\"Select which Notion databases to import from\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"database-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:`database-group ${settings.import_prd?'enabled':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"database-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"import_prd\",name:\"import_prd\",checked:settings.import_prd||false,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"import_prd\",children:\"Import Product Requirements Documents (PRDs)\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"prd_database_id\",value:settings.prd_database_id||'',onChange:handleInputChange,placeholder:\"Enter PRDs database ID\",disabled:!settings.import_prd})]}),/*#__PURE__*/_jsxs(\"div\",{className:`database-group ${settings.import_research?'enabled':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"database-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"import_research\",name:\"import_research\",checked:settings.import_research||false,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"import_research\",children:\"Import User Research Documents\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"research_database_id\",value:settings.research_database_id||'',onChange:handleInputChange,placeholder:\"Enter User Research database ID\",disabled:!settings.import_research})]}),/*#__PURE__*/_jsxs(\"div\",{className:`database-group ${settings.import_analytics?'enabled':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"database-checkbox\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"import_analytics\",name:\"import_analytics\",checked:settings.import_analytics||false,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"import_analytics\",children:\"Import Data Analytics Reports\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"analytics_database_id\",value:settings.analytics_database_id||'',onChange:handleInputChange,placeholder:\"Enter Data Analytics database ID\",disabled:!settings.import_analytics})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"button-group\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:handleSaveChanges,disabled:isSaving,children:isSaving?'Saving...':'Save Configuration'})})]})]})]})});};export default SettingsPage;","map":{"version":3,"names":["React","useState","useEffect","notionAPI","jsx","_jsx","jsxs","_jsxs","SettingsPage","settings","setSettings","isLoading","setIsLoading","isSaving","setIsSaving","isTesting","setIsTesting","message","setMessage","fetchSettings","response","getSettings","data","notion_token","prd_database_id","research_database_id","analytics_database_id","import_prd","import_research","import_analytics","error","console","type","text","handleInputChange","e","name","value","checked","target","prev","handleTestConnection","testConnection","connected","handleSaveChanges","updateSettings","children","className","htmlFor","id","onChange","placeholder","onClick","disabled"],"sources":["/Users/konstantinvaliotti/prdreview/frontend/src/components/SettingsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { notionAPI } from '../services/api';\nimport { NotionSettingsUpdate } from '../types';\nimport './SettingsPage.css';\n\nconst SettingsPage: React.FC = () => {\n  const [settings, setSettings] = useState<NotionSettingsUpdate>({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [isSaving, setIsSaving] = useState(false);\n  const [isTesting, setIsTesting] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  useEffect(() => {\n    const fetchSettings = async () => {\n      try {\n        const response = await notionAPI.getSettings();\n        if (response.data) {\n          setSettings({\n            notion_token: response.data.notion_token || '',\n            prd_database_id: response.data.prd_database_id || '',\n            research_database_id: response.data.research_database_id || '',\n            analytics_database_id: response.data.analytics_database_id || '',\n            import_prd: response.data.import_prd || false,\n            import_research: response.data.import_research || false,\n            import_analytics: response.data.import_analytics || false,\n          });\n        }\n      } catch (error) {\n        console.error('Error fetching settings:', error);\n        setMessage({ type: 'error', text: 'Failed to load settings.' });\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSettings();\n  }, []);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    setSettings(prev => ({ ...prev, [name]: type === 'checkbox' ? checked : value }));\n  };\n\n  const handleTestConnection = async () => {\n    if (!settings.notion_token) {\n      setMessage({ type: 'error', text: 'Notion token is required to test the connection.' });\n      return;\n    }\n    setIsTesting(true);\n    setMessage(null);\n    try {\n      // Pass the whole settings object, let the backend handle it\n      const response = await notionAPI.testConnection(settings);\n      if (response.data.connected) {\n        setMessage({ type: 'success', text: 'Connection successful!' });\n      } else {\n        setMessage({ type: 'error', text: `Connection failed: ${response.data.message}` });\n      }\n    } catch (error) {\n      console.error('Error testing connection:', error);\n      setMessage({ type: 'error', text: 'An error occurred while testing the connection.' });\n    } finally {\n      setIsTesting(false);\n    }\n  };\n\n  const handleSaveChanges = async () => {\n    setIsSaving(true);\n    setMessage(null);\n    try {\n      await notionAPI.updateSettings(settings);\n      setMessage({ type: 'success', text: 'Settings saved successfully!' });\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      setMessage({ type: 'error', text: 'Failed to save settings.' });\n    } finally {\n      setIsSaving(false);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading settings...</div>;\n  }\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-container\">\n        <div className=\"settings-header\">\n          <h1>Settings</h1>\n          <p>Configure your Notion integration and manage your knowledge base imports</p>\n        </div>\n        \n        {message && (\n          <div className={`message ${message.type}`}>\n            {message.text}\n          </div>\n        )}\n\n        <div className=\"settings-content\">\n          <div className=\"settings-card\">\n            <div className=\"card-header\">\n              <span className=\"card-icon\">🔗</span>\n              <div>\n                <h2 className=\"card-title\">Notion API Connection</h2>\n                <p className=\"card-description\">Connect your Notion workspace to import documents</p>\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"notion_token\">Notion API Token</label>\n              <div className=\"input-group\">\n                <input\n                  type=\"password\"\n                  id=\"notion_token\"\n                  name=\"notion_token\"\n                  value={settings.notion_token || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter your Notion API token (secret_...)\"\n                />\n                <button \n                  className=\"btn-secondary\" \n                  onClick={handleTestConnection} \n                  disabled={isTesting}\n                >\n                  {isTesting ? 'Testing...' : 'Test Connection'}\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"settings-card\">\n            <div className=\"card-header\">\n              <span className=\"card-icon\">📊</span>\n              <div>\n                <h2 className=\"card-title\">Database Configuration</h2>\n                <p className=\"card-description\">Select which Notion databases to import from</p>\n              </div>\n            </div>\n\n            <div className=\"database-section\">\n              <div className={`database-group ${settings.import_prd ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_prd\"\n                    name=\"import_prd\"\n                    checked={settings.import_prd || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_prd\">Import Product Requirements Documents (PRDs)</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"prd_database_id\"\n                  value={settings.prd_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter PRDs database ID\"\n                  disabled={!settings.import_prd}\n                />\n              </div>\n\n              <div className={`database-group ${settings.import_research ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_research\"\n                    name=\"import_research\"\n                    checked={settings.import_research || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_research\">Import User Research Documents</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"research_database_id\"\n                  value={settings.research_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter User Research database ID\"\n                  disabled={!settings.import_research}\n                />\n              </div>\n\n              <div className={`database-group ${settings.import_analytics ? 'enabled' : ''}`}>\n                <div className=\"database-checkbox\">\n                  <input \n                    type=\"checkbox\"\n                    id=\"import_analytics\"\n                    name=\"import_analytics\"\n                    checked={settings.import_analytics || false}\n                    onChange={handleInputChange}\n                  />\n                  <label htmlFor=\"import_analytics\">Import Data Analytics Reports</label>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"analytics_database_id\"\n                  value={settings.analytics_database_id || ''}\n                  onChange={handleInputChange}\n                  placeholder=\"Enter Data Analytics database ID\"\n                  disabled={!settings.import_analytics}\n                />\n              </div>\n            </div>\n\n            <div className=\"button-group\">\n              <button className=\"btn-primary\" onClick={handleSaveChanges} disabled={isSaving}>\n                {isSaving ? 'Saving...' : 'Save Configuration'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SettingsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}